;	OPT l-

	ICL "hardware.s"

.ENUM	@dmactl
	blank	= %00
	narrow	= %01
	standard= %10
	wide	= %11
	missiles= %100
	players	= %1000
	lineX1	= %10000
	lineX2	= %00000
	dma	= %100000
.ENDE

;SCR_WID	EQU 42
;SW		EQU SCR_WID

SCREEN_MODE			EQU	$0E
SM					EQU	SCREEN_MODE
BLANK_LINE			EQU $70
SCREEN_ADR			EQU	$40
DISP_LIST			EQU	$41
DLI_INT				EQU	$80

SCR_POS 			EQU	128			; screen address
DISPLIST			EQU SCR_POS +2	; display list pointer
SCREEN				EQU DISPLIST +2	; visible screen 0/1
A_REG				EQU SCREEN +1
X_REG				EQU A_REG +1
Y_REG				EQU X_REG +1
COLOUR				EQU	Y_REG +1	; fill colour
TV					EQU	COLOUR +1
TH					EQU	TV +1
JOYV 				EQU TH +1
JOYH 				EQU JOYV +1
JOYF 				EQU JOYH +1
HPOS 				EQU JOYF +1
VPOS 				EQU HPOS +2

;	ORG $2000\ mva #$ff portb\ rts\ ini $2000; ---	BASIC switch OFF

.MACRO	FILL_LEFT
;;;;;	LDX REGA			; hstart
		LDY	SCR_HOR,X
		LDA (SCR_POS),Y		; get screen,left
		AND	LFT_MASK_TAB,X	; and left mask,left
		STA	X_REG			; store temp
		LDA	COLOUR			; get colour
		AND	LFT_NEG_MASK_TAB,X	; and negated left mask,left
		ORA X_REG			; or temp
        STA (SCR_POS),Y 	; put screen,left
.ENDM 

.MACRO	FILL_RIGHT
		LDX Y_REG			; hend
		LDY	SCR_HOR,X
		LDA (SCR_POS),Y		; get screen,right
		AND	RGT_MASK_TAB,X	; and right mask,right
		STA	X_REG			; store temp
		LDA	COLOUR			; get colour
		AND	RGT_NEG_MASK_TAB,X	; and negated right mask,right
		ORA X_REG			; or temp
        STA (SCR_POS),Y 	; put screen,right
.ENDM

	ORG $2000

MAIN	LDA $14
		CMP	$14
		BEQ	MAIN		; :cmp:req $14		;wait 1 frame

		SEI				; stop IRQ interrupts

		CLD
		CLV

		MVA #0 NMIEN	; disable NMI interrupts
		STA DMACTL		; disable antic
;		STA	SDMCTL		; disable antic shadow

		STA SCREEN		; reset visible screen

		MVA #$FE PORTB	; switch off ROM to get 16k more ram (and basic?)

		MWA #NMI $FFFA	; new NMI handler

		MVA #$C0 NMIEN	; enable NMI+DLI

MLOOP 	JSR	V_WAIT
		JSR	SWAP_SCREEN
		LDX #255
		JSR	DELAY
		JSR	DRAW_SCREEN
;		JSR	JOYSTICK

		JMP MLOOP

.LOCAL	V_WAIT
			LDA	#81
LOOP			CMP	VCOUNT  ; will be equal until incremented in VB
				BNE	LOOP
			RTS
.ENDL

.LOCAL	DELAY
LOOP	DEX
			BNE	LOOP
		RTS
.ENDL

.LOCAL	SWAP_SCREEN
			LDX	#50
			LDA	SCREEN
			EOR	#1
			STA	SCREEN
			BEQ	SCREEN0
			JMP SCREEN1
SCREEN0		MWA #DL0 DISPLIST
; clear screen 1
; draw on screen 1
			LDA	#0 ; %00111001 ; not needed
LOOP1			STA	SCN1_LINE00+(0*50),X
				STA	SCN1_LINE00+(1*50),X
				STA	SCN1_LINE00+(2*50),X
				STA	SCN1_LINE00+(3*50),X
				STA	SCN1_LINE00+(4*50),X
				STA	SCN1_LINE00+(5*50),X
				STA	SCN1_LINE00+(6*50),X
				STA	SCN1_LINE00+(7*50),X
				STA	SCN1_LINE00+(8*50),X
				STA	SCN1_LINE00+(9*50),X
				STA	SCN1_LINE00+(10*50),X
				STA	SCN1_LINE00+(11*50),X
				STA	SCN1_LINE00+(12*50),X
				STA	SCN1_LINE00+(13*50),X
				STA	SCN1_LINE00+(14*50),X
				STA	SCN1_LINE00+(15*50),X
				STA	SCN1_LINE00+(16*50),X
				STA	SCN1_LINE00+(17*50),X
				STA	SCN1_LINE00+(18*50),X
				STA	SCN1_LINE00+(19*50),X
				STA	SCN1_LINE00+(20*50),X
				STA	SCN1_LINE00+(21*50),X
				STA	SCN1_LINE00+(22*50),X
				STA	SCN1_LINE00+(23*50),X
				STA	SCN1_LINE00+(24*50),X
				STA	SCN1_LINE00+(25*50),X
				STA	SCN1_LINE00+(26*50),X
				STA	SCN1_LINE00+(27*50),X
				STA	SCN1_LINE00+(28*50),X
				STA	SCN1_LINE00+(29*50),X
				STA	SCN1_LINE00+(30*50),X
				STA	SCN1_LINE00+(31*50),X
				STA	SCN1_LINE00+(32*50),X
				STA	SCN1_LINE00+(33*50),X
				STA	SCN1_LINE00+(34*50),X
				STA	SCN1_LINE00+(35*50),X
				STA	SCN1_LINE00+(36*50),X
				STA	SCN1_LINE00+(37*50),X
				STA	SCN1_LINE00+(38*50),X
				STA	SCN1_LINE00+(39*50),X
				STA	SCN1_LINE00+(40*50)-2,X
				DEX
				BPL	LOOP1

			LDX	#<SCR1_LINE_TAB_HI
			LDY	#>SCR1_LINE_TAB_HI
			STX	FILL_LINE.FL_FL_H +1
			STY	FILL_LINE.FL_FL_H +2
			LDX	#<SCR0_LINE_TAB_LO
			LDY	#>SCR0_LINE_TAB_LO
			STX	FILL_LINE.FL_FL_L +1
			STY	FILL_LINE.FL_FL_L +2

			LDX	#<SCR1_LINE_HI
			LDY	#>SCR1_LINE_HI
			STX	FILL_LINE.FL_PT_H +1
			STY	FILL_LINE.FL_PT_H +2
			STX	PLOT.PLOT_HI +1
			STY	PLOT.PLOT_HI +2
			LDX	#<SCR0_LINE_LO
			LDY	#>SCR0_LINE_LO
			STX	FILL_LINE.FL_PT_L +1
			STY	FILL_LINE.FL_PT_L +2
			STX	PLOT.PLOT_LO +1
			STY	PLOT.PLOT_LO +2

			RTS
SCREEN1			MWA #DL1 DISPLIST	; ANTIC address program
; clear screen 0
; draw on screen 0
			LDA	#0; %10010011
LOOP0			STA	SCN0_LINE00+(0*50),X
				STA	SCN0_LINE00+(1*50),X
				STA	SCN0_LINE00+(2*50),X
				STA	SCN0_LINE00+(3*50),X
				STA	SCN0_LINE00+(4*50),X
				STA	SCN0_LINE00+(5*50),X
				STA	SCN0_LINE00+(6*50),X
				STA	SCN0_LINE00+(7*50),X
				STA	SCN0_LINE00+(8*50),X
				STA	SCN0_LINE00+(9*50),X
				STA	SCN0_LINE00+(10*50),X
				STA	SCN0_LINE00+(11*50),X
				STA	SCN0_LINE00+(12*50),X
				STA	SCN0_LINE00+(13*50),X
				STA	SCN0_LINE00+(14*50),X
				STA	SCN0_LINE00+(15*50),X
				STA	SCN0_LINE00+(16*50),X
				STA	SCN0_LINE00+(17*50),X
				STA	SCN0_LINE00+(18*50),X
				STA	SCN0_LINE00+(19*50),X
				STA	SCN0_LINE00+(20*50),X
				STA	SCN0_LINE00+(21*50),X
				STA	SCN0_LINE00+(22*50),X
				STA	SCN0_LINE00+(23*50),X
				STA	SCN0_LINE00+(24*50),X
				STA	SCN0_LINE00+(25*50),X
				STA	SCN0_LINE00+(26*50),X
				STA	SCN0_LINE00+(27*50),X
				STA	SCN0_LINE00+(28*50),X
				STA	SCN0_LINE00+(29*50),X
				STA	SCN0_LINE00+(30*50),X
				STA	SCN0_LINE00+(31*50),X
				STA	SCN0_LINE00+(32*50),X
				STA	SCN0_LINE00+(33*50),X
				STA	SCN0_LINE00+(34*50),X
				STA	SCN0_LINE00+(35*50),X
				STA	SCN0_LINE00+(36*50),X
				STA	SCN0_LINE00+(37*50),X
				STA	SCN0_LINE00+(38*50),X
				STA	SCN0_LINE00+(39*50),X
				STA	SCN0_LINE00+(40*50)-2,X
				DEX
				BNE	LOOP0

			LDX	#<SCR0_LINE_TAB_HI
			LDY	#>SCR0_LINE_TAB_HI
			STX	FILL_LINE.FL_FL_H +1
			STY	FILL_LINE.FL_FL_H +2
			LDX	#<SCR0_LINE_TAB_LO
			LDY	#>SCR0_LINE_TAB_LO
			STX	FILL_LINE.FL_FL_L +1
			STY	FILL_LINE.FL_FL_L +2

			LDX	#<SCR0_LINE_HI
			LDY	#>SCR0_LINE_HI
			STX	FILL_LINE.FL_PT_H +1
			STY	FILL_LINE.FL_PT_H +2
			STX	PLOT.PLOT_HI +1
			STY	PLOT.PLOT_HI +2
			LDX	#<SCR0_LINE_LO
			LDY	#>SCR0_LINE_LO
			STX	FILL_LINE.FL_PT_L +1
			STY	FILL_LINE.FL_PT_L +2
			STX	PLOT.PLOT_LO +1
			STY	PLOT.PLOT_LO +2

			RTS
.ENDL

.LOCAL	DRAW_SCREEN
		
	LDA	#%10101010
	STA	COLOUR
	LDX	#60
	LDA	#0
	LDY	#127
	JSR	FILL_LINE
	LDY	#61
	LDX	#0
	JSR	PLOT
	LDY	#61
	LDX	#127
	JSR	PLOT

	LDA	#%01010101
	STA	COLOUR
	LDX	#55
	LDA	#3
	LDY	#124
	JSR	FILL_LINE
	LDY	#56
	LDX	#3
	JSR	PLOT
	LDY	#56
	LDX	#124
	JSR	PLOT

	LDA	#%10101010
	STA	COLOUR
	LDX	#50
	LDA	#6
	LDY	#121
	JSR	FILL_LINE
	LDY	#51
	LDX	#6
	JSR	PLOT
	LDY	#51
	LDX	#121
	JSR	PLOT

	LDA	#%01010101
	STA	COLOUR
	LDX	#45
	LDA	#9
	LDY	#118
	JSR	FILL_LINE
	LDY	#46
	LDX	#9
	JSR	PLOT
	LDY	#46
	LDX	#118
	JSR	PLOT

	LDA	#%10101010
	STA	COLOUR
	LDX	#40
	LDA	#12
	LDY	#115
	JSR	FILL_LINE
	LDY	#41
	LDX	#12
	JSR	PLOT
	LDY	#41
	LDX	#115
	JSR	PLOT

	LDA	#%01010101
	STA	COLOUR
	LDX	#35
	LDA	#15
	LDY	#112
	JSR	FILL_LINE
	LDY	#36
	LDX	#15
	JSR	PLOT
	LDY	#36
	LDX	#112
	JSR	PLOT

	LDA	#%10101010
	STA	COLOUR
	LDX	#30
	LDA	#18
	LDY	#109
	JSR	FILL_LINE
	LDY	#31
	LDX	#18
	JSR	PLOT
	LDY	#31
	LDX	#109
	JSR	PLOT

	LDA	#%01010101
	STA	COLOUR
	LDX	#25
	LDA	#21
	LDY	#106
	JSR	FILL_LINE
	LDY	#26
	LDX	#21
	JSR	PLOT
	LDY	#26
	LDX	#106
	JSR	PLOT

	LDA	#%10101010
	STA	COLOUR
	LDX	#20
	LDA	#24
	LDY	#103
	JSR	FILL_LINE
	LDY	#21
	LDX	#24
	JSR	PLOT
	LDY	#21
	LDX	#103
	JSR	PLOT

	LDA	#%01010101
	STA	COLOUR
	LDX	#15
	LDA	#27
	LDY	#98
	JSR	FILL_LINE
	LDY	#16
	LDX	#27
	JSR	PLOT
	LDY	#16
	LDX	#98
	JSR	PLOT

	LDA	#%10101010
	STA	COLOUR
	LDX	#10
	LDA	#30
	LDY	#95
	JSR	FILL_LINE
	LDY	#11
	LDX	#30
	JSR	PLOT
	LDY	#11
	LDX	#95
	JSR	PLOT

	RTS
.ENDL

JOYSTICK1 LDA $DC01     ; PORT 1
          JMP JOYSTICK
JOYSTICK2 LDA PORTA
.LOCAL	JOYSTICK
		LDX #0
		LDY #0
UP     	LSR
		BCS	DOWN
			DEY
DOWN  	LSR
		BCS	LEFT
			INY
LEFT  	LSR
		BCS	RIGHT
			DEX
RIGHT  	LSR
		BCS	FIRE
			INX
FIRE  	EOR   #255
		AND   #1
		STA   JOYF
		STX   JOYH
		STY   JOYV
		LSR
		RTS
.ENDL

.LOCAL	MOVE_PLR
		JSR JOYSTICK2 ; x and y already contain x and y joy pos?
		TYA
		CLC
		ADC   VPOS
		STA   VPOS  ; vertical

		TXA
		BEQ   EXIT
		BMI   RIGHT

LEFT  	STA   LFT +1
		LDA   HPOS
		CLC
LFT    	ADC   #0 
		STA   HPOS
		TAX
		LDA   HPOS +1
		ADC   #0
		AND   #3
		STA   HPOS +1
		TAY
		RTS

RIGHT  	EOR   #$FF
		CLC
		ADC   #1    ; carry is clear
		STA	RGT +1
		SEC
		LDA   HPOS
RGT   	SBC   #0 
		STA   HPOS
		TAX
		LDA   HPOS +1
		SBC   #0
		AND   #3
		STA   HPOS +1
		TAY
		RTS

EXIT  	LDX HPOS
		LDY HPOS +1
		RTS
.ENDL

.LOCAL	PLOT
PLOT_LO	LDA	SCR0_LINE_LO,Y
		STA	SCR_POS
PLOT_HI	LDA	SCR0_LINE_HI,Y
		STA	SCR_POS+1
		LDY	SCR_HOR,X
		LDA (SCR_POS),Y
		ORA SCR_OR,X
        STA (SCR_POS),Y 
		RTS
.ENDL

;.LOCAL	CLR_PLOT
;		LDA	SC0_LO,Y
;		STA	CLR_SCR+1
;		LDA	SC0_HI,Y
;		STA	CLR_SCR+2
;		LDY	SCR_HOR,X
;		LDA #0
;CLR_SCR	STA	$ABCD,Y
;		RTS
;.ENDL

.LOCAL	MEMSET
			STY	LSB_ONLY+1 ; store LSB count
			CPX	#0          ; MSB?     
            BEQ	LSB_ONLY   ; no

            LDY	#0          ; yes so reset LSB
MSB_LOOP  
LSB_LOOP    		STA	(SCR_POS),Y   ; clear whole MSB
					DEY 
					BNE	LSB_LOOP

				INC	SCR_POS+1      ; inc MSB
				DEX               ; dec MSB count
				BNE	MSB_LOOP

LSB_ONLY    LDY	#0          ; LSB count 
            BEQ	MS_END     ; not needed

LAST_LSB_LOOP 	STA	(SCR_POS),Y
				DEY 
				BNE	LAST_LSB_LOOP
                
            STA	(SCR_POS),Y     ; clear last Y (0)
MS_END      RTS
.ENDL

.LOCAL	DLI
		STA DLI_RGA +1
		STX DLI_RGX +1
		STY DLI_RGY +1

		LDA CONSOL

;DLI_ST	INC VBL.C0 +1	; my code

		LDA	TV
		LDX	#3
		JSR	HEX8

		LDA	TH
		LDX	#6
		JSR	HEX8

		LDY	TV
		LDA	TH
		LDX #9
		JSR	HEX16

		LDY HPOS
		LDA HPOS +1
		LDX	#21
		JSR	HEX16

			JSR	JOYSTICK

	JSR MOVE_PLR

;		LDA VBL.C0+1
;		STA COLBK

DLI_RGA	LDA #0
DLI_RGX	LDX #0
DLI_RGY	LDY #0
		RTI
.ENDL

.local	NMI

		BIT NMIST
		BPL VBL

DLI_ADR	JMP DLI				; dli start address
.ENDL

.LOCAL	VBL
		STA VBI_RGA +1
		STX VBI_RGX +1
		STY VBI_RGY +1

		STA NMIST			; reset NMI flag

		MWA DISPLIST DLISTL

;		LDA	SCREEN
;		EOR	#1
;		STA	SCRIEEN
;		BEQ	SCRN0
;SCRN1		MWA #DL1 DLISTL
;			JMP CONT
;SCRN0		MWA #DL0 DLISTL	; ANTIC address program

CONT
		MVA #@DMACTL(NARROW | DMA | LINEX1 | PLAYERS | MISSILES) DMACTL	; set new screen width

;		LDA >CHR_SET+$400*$00	; Initial values
;		STA CHBASE
C0		LDA #$00
		STA COLBK
C1		LDA #$04
		STA COLOR0
C2		LDA #$06
		STA COLOR1
C3		LDA #$08
		STA COLOR2
C4		LDA #$0E
		STA COLOR3
		LDA #$02
		STA CHACTL
		LDA #$04
		STA PRIOR
		LDA #$00
		STA HPOSP0
		STA HPOSP1
		STA HPOSP2
		STA HPOSP3
		STA HPOSM0
		STA HPOSM1
		STA HPOSM2
		STA HPOSM3
		STA SIZEP0
		STA SIZEP1
		STA SIZEP2
		STA SIZEP3
		STA SIZEM
		STA COLPM0
		STA COLPM1
		STA COLPM2
		STA COLPM3

;		INC	C0 +1
;		INC C1 +1	; my code
;		INC C2 +1	; my code
;		INC C3 +1	; my code

VBI_RGA	LDA #0
VBI_RGX	LDX #0
VBI_RGY	LDY #0
		RTI
.ENDL

.LOCAL	HEX16	; X = HOR / A = HI / Y = LO
		PHA
		TYA
		JSR	HEX8
		PLA
		INX
;		JSR HEX8
;		RTS
.ENDL

.LOCAL	HEX8 ; A = NUM / X = HOR
		PHA
		LSR	
		LSR	
		LSR	
		LSR	
		TAY
		JSR   HEXCHAR
	
		PLA
		AND   #15
		TAY
		INX	
;		JSR   HEXCHAR
;		RTS
.ENDL

.LOCAL	HEXCHAR	
		LDA	HEX0,Y
		STA	SCN0_LINE00,X
		LDA	HEX1,Y
		STA	SCN0_LINE01,X
		LDA	HEX2,Y
		STA	SCN0_LINE02,X
		LDA	HEX3,Y
		STA	SCN0_LINE03,X
		LDA	HEX4,Y
		STA	SCN0_LINE04,X
		RTS
.ENDL

;pass in v and start hor and end hor (x,y,a)

;calc start hor char (start hor /8)
;calc end hor char (end hor /8)
;calc hor char diff

;get ver_hi_jmp_tab,ver
;store jmp_addr
;get ver_lo_jmp_tab,ver
;add hor_tab,hor_char_diff
;store jmp_addr
;get ver_y_tab, in y

;lda colour
;jsr jmp_addr

.LOCAL	FILL_LINE	; x=v - a=hstart - y=hend
		STA	A_REG		; hstart
		STY	Y_REG		; hend

FL_PT_L	LDA	SCR0_LINE_LO,X	; for left / right
		STA	SCR_POS
FL_PT_H	LDA	SCR0_LINE_HI,X
		STA	SCR_POS+1

		LDA	SCR_HOR,Y	; hend
		LDY	A_REG		; hstart
		SEC
		SBC	SCR_HOR,Y	; diff
		BEQ	SAME_CH		; same char
		TAY

FL_FL_L	LDA	SCR0_LINE_TAB_LO,X
		CLC
		ADC	INS_HOR_TAB,Y ; SEC ALREADY SET AB0VE SO TABLE VALUES ARE -1
		STA	FILL_JP +1

FL_FL_H	LDA	SCR0_LINE_TAB_HI,X
		STA	FILL_JP +2
		LDA	SCR_LINE_Y_TAB,X

		LDX	A_REG	; hstart
;		CLC
		ADC	SCR_HOR,X	; start
		TAY

		LDA	COLOUR
FILL_JP	JMP	$ABCD
SAME_CH	RTS
.ENDL

	.ALIGN $100
.LOCAL	SCR0_LINE_00_07
		STA SCN0_LINE00+29,Y	; 00*3 = 00 30 - 
		STA SCN0_LINE00+28,Y	; 01*3 = 03 29 - 
		STA SCN0_LINE00+27,Y	; 02*3 = 06 28 - 
		STA SCN0_LINE00+26,Y	; 03*3 = 09 27 - 
		STA SCN0_LINE00+25,Y	; 04*3 = 12 26 - 
		STA SCN0_LINE00+24,Y	; 05*3 = 15 25 - 
		STA SCN0_LINE00+23,Y	; 06*3 = 18 24 - 
		STA SCN0_LINE00+22,Y	; 07*3 = 21 23 - 
		STA SCN0_LINE00+21,Y	; 08*3 = 24 22 - 
		STA SCN0_LINE00+20,Y	; 09*3 = 27 21 - 

		STA SCN0_LINE00+19,Y	; 10*3 = 30 20 - 
		STA SCN0_LINE00+18,Y	; 11*3 = 33 19 - 
		STA SCN0_LINE00+17,Y	; 12*3 = 36 18 - 
		STA SCN0_LINE00+16,Y	; 13*3 = 39 17 - 
		STA SCN0_LINE00+15,Y	; 14*3 = 42 16 - 
		STA SCN0_LINE00+14,Y	; 15*3 = 45 15 - 
		STA SCN0_LINE00+13,Y	; 16*3 = 48 14 - 
		STA SCN0_LINE00+12,Y	; 17*3 = 51 13 - 
		STA SCN0_LINE00+11,Y	; 18*3 = 54 12 - 
		STA SCN0_LINE00+10,Y	; 19*3 = 57 11 - 

		STA SCN0_LINE00+09,Y	; 20*3 = 60 10 - 10 chars to be filled
		STA SCN0_LINE00+08,Y	; 21*3 = 63 09 - 9 chars to be filled
		STA SCN0_LINE00+07,Y	; 22*3 = 66 08 - 8 chars to be filled
		STA SCN0_LINE00+06,Y	; 23*3 = 69 07 - 7 chars to be filled
		STA SCN0_LINE00+05,Y	; 24*3 = 72 06 - 6 chars to be filled
		STA SCN0_LINE00+04,Y	; 25*3 = 75 05 - 5 chars to be filled
		STA SCN0_LINE00+03,Y	; 26*3 = 78 04 - 4 chars to be filled
		STA SCN0_LINE00+02,Y	; 27*3 = 81 03 - 3 chars to be filled
		STA SCN0_LINE00+01,Y	; 28*3 = 84 02 = 2 chars to be filled
		STA SCN0_LINE00+00,Y	; 29*3 = 87 01 = 1 char needs to be filled
		FILL_LEFT
		FILL_RIGHT
		RTS						; 30*3 = 90 00 = no fill needed 
.ENDL
.LOCAL	SCR0_LINE_08_15
		STA SCN0_LINE08+29,Y
		STA SCN0_LINE08+28,Y
		STA SCN0_LINE08+27,Y
		STA SCN0_LINE08+26,Y
		STA SCN0_LINE08+25,Y
		STA SCN0_LINE08+24,Y
		STA SCN0_LINE08+23,Y
		STA SCN0_LINE08+22,Y
		STA SCN0_LINE08+21,Y
		STA SCN0_LINE08+20,Y

		STA SCN0_LINE08+19,Y
		STA SCN0_LINE08+18,Y
		STA SCN0_LINE08+17,Y
		STA SCN0_LINE08+16,Y
		STA SCN0_LINE08+15,Y
		STA SCN0_LINE08+14,Y
		STA SCN0_LINE08+13,Y
		STA SCN0_LINE08+12,Y
		STA SCN0_LINE08+11,Y
		STA SCN0_LINE08+10,Y

		STA SCN0_LINE08+09,Y
		STA SCN0_LINE08+08,Y
		STA SCN0_LINE08+07,Y
		STA SCN0_LINE08+06,Y
		STA SCN0_LINE08+05,Y
		STA SCN0_LINE08+04,Y
		STA SCN0_LINE08+03,Y
		STA SCN0_LINE08+02,Y
		STA SCN0_LINE08+01,Y
		STA SCN0_LINE08+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_16_23
		STA SCN0_LINE16+29,Y
		STA SCN0_LINE16+28,Y
		STA SCN0_LINE16+27,Y
		STA SCN0_LINE16+26,Y
		STA SCN0_LINE16+25,Y
		STA SCN0_LINE16+24,Y
		STA SCN0_LINE16+23,Y
		STA SCN0_LINE16+22,Y
		STA SCN0_LINE16+21,Y
		STA SCN0_LINE16+20,Y

		STA SCN0_LINE16+19,Y
		STA SCN0_LINE16+18,Y
		STA SCN0_LINE16+17,Y
		STA SCN0_LINE16+16,Y
		STA SCN0_LINE16+15,Y
		STA SCN0_LINE16+14,Y
		STA SCN0_LINE16+13,Y
		STA SCN0_LINE16+12,Y
		STA SCN0_LINE16+11,Y
		STA SCN0_LINE16+10,Y

		STA SCN0_LINE16+09,Y
		STA SCN0_LINE16+08,Y
		STA SCN0_LINE16+07,Y
		STA SCN0_LINE16+06,Y
		STA SCN0_LINE16+05,Y
		STA SCN0_LINE16+04,Y
		STA SCN0_LINE16+03,Y
		STA SCN0_LINE16+02,Y
		STA SCN0_LINE16+01,Y
		STA SCN0_LINE16+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_24_31
		STA SCN0_LINE24+29,Y
		STA SCN0_LINE24+28,Y
		STA SCN0_LINE24+27,Y
		STA SCN0_LINE24+26,Y
		STA SCN0_LINE24+25,Y
		STA SCN0_LINE24+24,Y
		STA SCN0_LINE24+23,Y
		STA SCN0_LINE24+22,Y
		STA SCN0_LINE24+21,Y
		STA SCN0_LINE24+20,Y

		STA SCN0_LINE24+19,Y
		STA SCN0_LINE24+18,Y
		STA SCN0_LINE24+17,Y
		STA SCN0_LINE24+16,Y
		STA SCN0_LINE24+15,Y
		STA SCN0_LINE24+14,Y
		STA SCN0_LINE24+13,Y
		STA SCN0_LINE24+12,Y
		STA SCN0_LINE24+11,Y
		STA SCN0_LINE24+10,Y

		STA SCN0_LINE24+09,Y
		STA SCN0_LINE24+08,Y
		STA SCN0_LINE24+07,Y
		STA SCN0_LINE24+06,Y
		STA SCN0_LINE24+05,Y
		STA SCN0_LINE24+04,Y
		STA SCN0_LINE24+03,Y
		STA SCN0_LINE24+02,Y
		STA SCN0_LINE24+01,Y
		STA SCN0_LINE24+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_32_39
		STA SCN0_LINE32+29,Y
		STA SCN0_LINE32+28,Y
		STA SCN0_LINE32+27,Y
		STA SCN0_LINE32+26,Y
		STA SCN0_LINE32+25,Y
		STA SCN0_LINE32+24,Y
		STA SCN0_LINE32+23,Y
		STA SCN0_LINE32+22,Y
		STA SCN0_LINE32+21,Y
		STA SCN0_LINE32+20,Y

		STA SCN0_LINE32+19,Y
		STA SCN0_LINE32+18,Y
		STA SCN0_LINE32+17,Y
		STA SCN0_LINE32+16,Y
		STA SCN0_LINE32+15,Y
		STA SCN0_LINE32+14,Y
		STA SCN0_LINE32+13,Y
		STA SCN0_LINE32+12,Y
		STA SCN0_LINE32+11,Y
		STA SCN0_LINE32+10,Y

		STA SCN0_LINE32+09,Y
		STA SCN0_LINE32+08,Y
		STA SCN0_LINE32+07,Y
		STA SCN0_LINE32+06,Y
		STA SCN0_LINE32+05,Y
		STA SCN0_LINE32+04,Y
		STA SCN0_LINE32+03,Y
		STA SCN0_LINE32+02,Y
		STA SCN0_LINE32+01,Y
		STA SCN0_LINE32+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_40_47
		STA SCN0_LINE40+29,Y
		STA SCN0_LINE40+28,Y
		STA SCN0_LINE40+27,Y
		STA SCN0_LINE40+26,Y
		STA SCN0_LINE40+25,Y
		STA SCN0_LINE40+24,Y
		STA SCN0_LINE40+23,Y
		STA SCN0_LINE40+22,Y
		STA SCN0_LINE40+21,Y
		STA SCN0_LINE40+20,Y

		STA SCN0_LINE40+19,Y
		STA SCN0_LINE40+18,Y
		STA SCN0_LINE40+17,Y
		STA SCN0_LINE40+16,Y
		STA SCN0_LINE40+15,Y
		STA SCN0_LINE40+14,Y
		STA SCN0_LINE40+13,Y
		STA SCN0_LINE40+12,Y
		STA SCN0_LINE40+11,Y
		STA SCN0_LINE40+10,Y

		STA SCN0_LINE40+09,Y
		STA SCN0_LINE40+08,Y
		STA SCN0_LINE40+07,Y
		STA SCN0_LINE40+06,Y
		STA SCN0_LINE40+05,Y
		STA SCN0_LINE40+04,Y
		STA SCN0_LINE40+03,Y
		STA SCN0_LINE40+02,Y
		STA SCN0_LINE40+01,Y
		STA SCN0_LINE40+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_48_55
		STA SCN0_LINE48+29,Y
		STA SCN0_LINE48+28,Y
		STA SCN0_LINE48+27,Y
		STA SCN0_LINE48+26,Y
		STA SCN0_LINE48+25,Y
		STA SCN0_LINE48+24,Y
		STA SCN0_LINE48+23,Y
		STA SCN0_LINE48+22,Y
		STA SCN0_LINE48+21,Y
		STA SCN0_LINE48+20,Y

		STA SCN0_LINE48+19,Y
		STA SCN0_LINE48+18,Y
		STA SCN0_LINE48+17,Y
		STA SCN0_LINE48+16,Y
		STA SCN0_LINE48+15,Y
		STA SCN0_LINE48+14,Y
		STA SCN0_LINE48+13,Y
		STA SCN0_LINE48+12,Y
		STA SCN0_LINE48+11,Y
		STA SCN0_LINE48+10,Y

		STA SCN0_LINE48+09,Y
		STA SCN0_LINE48+08,Y
		STA SCN0_LINE48+07,Y
		STA SCN0_LINE48+06,Y
		STA SCN0_LINE48+05,Y
		STA SCN0_LINE48+04,Y
		STA SCN0_LINE48+03,Y
		STA SCN0_LINE48+02,Y
		STA SCN0_LINE48+01,Y
		STA SCN0_LINE48+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR0_LINE_56_63
		STA SCN0_LINE56+29,Y
		STA SCN0_LINE56+28,Y
		STA SCN0_LINE56+27,Y
		STA SCN0_LINE56+26,Y
		STA SCN0_LINE56+25,Y
		STA SCN0_LINE56+24,Y
		STA SCN0_LINE56+23,Y
		STA SCN0_LINE56+22,Y
		STA SCN0_LINE56+21,Y
		STA SCN0_LINE56+20,Y

		STA SCN0_LINE56+19,Y
		STA SCN0_LINE56+18,Y
		STA SCN0_LINE56+17,Y
		STA SCN0_LINE56+16,Y
		STA SCN0_LINE56+15,Y
		STA SCN0_LINE56+14,Y
		STA SCN0_LINE56+13,Y
		STA SCN0_LINE56+12,Y
		STA SCN0_LINE56+11,Y
		STA SCN0_LINE56+10,Y

		STA SCN0_LINE56+09,Y
		STA SCN0_LINE56+08,Y
		STA SCN0_LINE56+07,Y
		STA SCN0_LINE56+06,Y
		STA SCN0_LINE56+05,Y
		STA SCN0_LINE56+04,Y
		STA SCN0_LINE56+03,Y
		STA SCN0_LINE56+02,Y
		STA SCN0_LINE56+01,Y
		STA SCN0_LINE56+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL

	.ALIGN $100
.LOCAL	SCR1_LINE_00_07
		STA SCN1_LINE00+29,Y	; 00*3 = 00 30 - 
		STA SCN1_LINE00+28,Y	; 01*3 = 03 29 - 
		STA SCN1_LINE00+27,Y	; 02*3 = 06 28 - 
		STA SCN1_LINE00+26,Y	; 03*3 = 09 27 - 
		STA SCN1_LINE00+25,Y	; 04*3 = 12 26 - 
		STA SCN1_LINE00+24,Y	; 05*3 = 15 25 - 
		STA SCN1_LINE00+23,Y	; 06*3 = 18 24 - 
		STA SCN1_LINE00+22,Y	; 07*3 = 21 23 - 
		STA SCN1_LINE00+21,Y	; 08*3 = 24 22 - 
		STA SCN1_LINE00+20,Y	; 09*3 = 27 21 - 

		STA SCN1_LINE00+19,Y	; 10*3 = 30 20 - 
		STA SCN1_LINE00+18,Y	; 11*3 = 33 19 - 
		STA SCN1_LINE00+17,Y	; 12*3 = 36 18 - 
		STA SCN1_LINE00+16,Y	; 13*3 = 39 17 - 
		STA SCN1_LINE00+15,Y	; 14*3 = 42 16 - 
		STA SCN1_LINE00+14,Y	; 15*3 = 45 15 - 
		STA SCN1_LINE00+13,Y	; 16*3 = 48 14 - 
		STA SCN1_LINE00+12,Y	; 17*3 = 51 13 - 
		STA SCN1_LINE00+11,Y	; 18*3 = 54 12 - 
		STA SCN1_LINE00+10,Y	; 19*3 = 57 11 - 

		STA SCN1_LINE00+09,Y	; 20*3 = 60 10 - 10 chars to be filled
		STA SCN1_LINE00+08,Y	; 21*3 = 63 09 - 9 chars to be filled
		STA SCN1_LINE00+07,Y	; 22*3 = 66 08 - 8 chars to be filled
		STA SCN1_LINE00+06,Y	; 23*3 = 69 07 - 7 chars to be filled
		STA SCN1_LINE00+05,Y	; 24*3 = 72 06 - 6 chars to be filled
		STA SCN1_LINE00+04,Y	; 25*3 = 75 05 - 5 chars to be filled
		STA SCN1_LINE00+03,Y	; 26*3 = 78 04 - 4 chars to be filled
		STA SCN1_LINE00+02,Y	; 27*3 = 81 03 - 3 chars to be filled
		STA SCN1_LINE00+01,Y	; 28*3 = 84 02 = 2 chars to be filled
		STA SCN1_LINE00+00,Y	; 29*3 = 87 01 = 1 char needs to be filled
		FILL_LEFT
		FILL_RIGHT
		RTS						; 30*3 = 90 00 = no fill needed 
.ENDL
.LOCAL	SCR1_LINE_08_15
		STA SCN1_LINE08+29,Y
		STA SCN1_LINE08+28,Y
		STA SCN1_LINE08+27,Y
		STA SCN1_LINE08+26,Y
		STA SCN1_LINE08+25,Y
		STA SCN1_LINE08+24,Y
		STA SCN1_LINE08+23,Y
		STA SCN1_LINE08+22,Y
		STA SCN1_LINE08+21,Y
		STA SCN1_LINE08+20,Y

		STA SCN1_LINE08+19,Y
		STA SCN1_LINE08+18,Y
		STA SCN1_LINE08+17,Y
		STA SCN1_LINE08+16,Y
		STA SCN1_LINE08+15,Y
		STA SCN1_LINE08+14,Y
		STA SCN1_LINE08+13,Y
		STA SCN1_LINE08+12,Y
		STA SCN1_LINE08+11,Y
		STA SCN1_LINE08+10,Y

		STA SCN1_LINE08+09,Y
		STA SCN1_LINE08+08,Y
		STA SCN1_LINE08+07,Y
		STA SCN1_LINE08+06,Y
		STA SCN1_LINE08+05,Y
		STA SCN1_LINE08+04,Y
		STA SCN1_LINE08+03,Y
		STA SCN1_LINE08+02,Y
		STA SCN1_LINE08+01,Y
		STA SCN1_LINE08+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_16_23
		STA SCN1_LINE16+29,Y
		STA SCN1_LINE16+28,Y
		STA SCN1_LINE16+27,Y
		STA SCN1_LINE16+26,Y
		STA SCN1_LINE16+25,Y
		STA SCN1_LINE16+24,Y
		STA SCN1_LINE16+23,Y
		STA SCN1_LINE16+22,Y
		STA SCN1_LINE16+21,Y
		STA SCN1_LINE16+20,Y

		STA SCN1_LINE16+19,Y
		STA SCN1_LINE16+18,Y
		STA SCN1_LINE16+17,Y
		STA SCN1_LINE16+16,Y
		STA SCN1_LINE16+15,Y
		STA SCN1_LINE16+14,Y
		STA SCN1_LINE16+13,Y
		STA SCN1_LINE16+12,Y
		STA SCN1_LINE16+11,Y
		STA SCN1_LINE16+10,Y

		STA SCN1_LINE16+09,Y
		STA SCN1_LINE16+08,Y
		STA SCN1_LINE16+07,Y
		STA SCN1_LINE16+06,Y
		STA SCN1_LINE16+05,Y
		STA SCN1_LINE16+04,Y
		STA SCN1_LINE16+03,Y
		STA SCN1_LINE16+02,Y
		STA SCN1_LINE16+01,Y
		STA SCN1_LINE16+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_24_31
		STA SCN1_LINE24+29,Y
		STA SCN1_LINE24+28,Y
		STA SCN1_LINE24+27,Y
		STA SCN1_LINE24+26,Y
		STA SCN1_LINE24+25,Y
		STA SCN1_LINE24+24,Y
		STA SCN1_LINE24+23,Y
		STA SCN1_LINE24+22,Y
		STA SCN1_LINE24+21,Y
		STA SCN1_LINE24+20,Y

		STA SCN1_LINE24+19,Y
		STA SCN1_LINE24+18,Y
		STA SCN1_LINE24+17,Y
		STA SCN1_LINE24+16,Y
		STA SCN1_LINE24+15,Y
		STA SCN1_LINE24+14,Y
		STA SCN1_LINE24+13,Y
		STA SCN1_LINE24+12,Y
		STA SCN1_LINE24+11,Y
		STA SCN1_LINE24+10,Y

		STA SCN1_LINE24+09,Y
		STA SCN1_LINE24+08,Y
		STA SCN1_LINE24+07,Y
		STA SCN1_LINE24+06,Y
		STA SCN1_LINE24+05,Y
		STA SCN1_LINE24+04,Y
		STA SCN1_LINE24+03,Y
		STA SCN1_LINE24+02,Y
		STA SCN1_LINE24+01,Y
		STA SCN1_LINE24+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_32_39
		STA SCN1_LINE32+29,Y
		STA SCN1_LINE32+28,Y
		STA SCN1_LINE32+27,Y
		STA SCN1_LINE32+26,Y
		STA SCN1_LINE32+25,Y
		STA SCN1_LINE32+24,Y
		STA SCN1_LINE32+23,Y
		STA SCN1_LINE32+22,Y
		STA SCN1_LINE32+21,Y
		STA SCN1_LINE32+20,Y

		STA SCN1_LINE32+19,Y
		STA SCN1_LINE32+18,Y
		STA SCN1_LINE32+17,Y
		STA SCN1_LINE32+16,Y
		STA SCN1_LINE32+15,Y
		STA SCN1_LINE32+14,Y
		STA SCN1_LINE32+13,Y
		STA SCN1_LINE32+12,Y
		STA SCN1_LINE32+11,Y
		STA SCN1_LINE32+10,Y

		STA SCN1_LINE32+09,Y
		STA SCN1_LINE32+08,Y
		STA SCN1_LINE32+07,Y
		STA SCN1_LINE32+06,Y
		STA SCN1_LINE32+05,Y
		STA SCN1_LINE32+04,Y
		STA SCN1_LINE32+03,Y
		STA SCN1_LINE32+02,Y
		STA SCN1_LINE32+01,Y
		STA SCN1_LINE32+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_40_47
		STA SCN1_LINE40+29,Y
		STA SCN1_LINE40+28,Y
		STA SCN1_LINE40+27,Y
		STA SCN1_LINE40+26,Y
		STA SCN1_LINE40+25,Y
		STA SCN1_LINE40+24,Y
		STA SCN1_LINE40+23,Y
		STA SCN1_LINE40+22,Y
		STA SCN1_LINE40+21,Y
		STA SCN1_LINE40+20,Y

		STA SCN1_LINE40+19,Y
		STA SCN1_LINE40+18,Y
		STA SCN1_LINE40+17,Y
		STA SCN1_LINE40+16,Y
		STA SCN1_LINE40+15,Y
		STA SCN1_LINE40+14,Y
		STA SCN1_LINE40+13,Y
		STA SCN1_LINE40+12,Y
		STA SCN1_LINE40+11,Y
		STA SCN1_LINE40+10,Y

		STA SCN1_LINE40+09,Y
		STA SCN1_LINE40+08,Y
		STA SCN1_LINE40+07,Y
		STA SCN1_LINE40+06,Y
		STA SCN1_LINE40+05,Y
		STA SCN1_LINE40+04,Y
		STA SCN1_LINE40+03,Y
		STA SCN1_LINE40+02,Y
		STA SCN1_LINE40+01,Y
		STA SCN1_LINE40+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_48_55
		STA SCN1_LINE48+29,Y
		STA SCN1_LINE48+28,Y
		STA SCN1_LINE48+27,Y
		STA SCN1_LINE48+26,Y
		STA SCN1_LINE48+25,Y
		STA SCN1_LINE48+24,Y
		STA SCN1_LINE48+23,Y
		STA SCN1_LINE48+22,Y
		STA SCN1_LINE48+21,Y
		STA SCN1_LINE48+20,Y

		STA SCN1_LINE48+19,Y
		STA SCN1_LINE48+18,Y
		STA SCN1_LINE48+17,Y
		STA SCN1_LINE48+16,Y
		STA SCN1_LINE48+15,Y
		STA SCN1_LINE48+14,Y
		STA SCN1_LINE48+13,Y
		STA SCN1_LINE48+12,Y
		STA SCN1_LINE48+11,Y
		STA SCN1_LINE48+10,Y

		STA SCN1_LINE48+09,Y
		STA SCN1_LINE48+08,Y
		STA SCN1_LINE48+07,Y
		STA SCN1_LINE48+06,Y
		STA SCN1_LINE48+05,Y
		STA SCN1_LINE48+04,Y
		STA SCN1_LINE48+03,Y
		STA SCN1_LINE48+02,Y
		STA SCN1_LINE48+01,Y
		STA SCN1_LINE48+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL
.LOCAL	SCR1_LINE_56_63
		STA SCN1_LINE56+29,Y
		STA SCN1_LINE56+28,Y
		STA SCN1_LINE56+27,Y
		STA SCN1_LINE56+26,Y
		STA SCN1_LINE56+25,Y
		STA SCN1_LINE56+24,Y
		STA SCN1_LINE56+23,Y
		STA SCN1_LINE56+22,Y
		STA SCN1_LINE56+21,Y
		STA SCN1_LINE56+20,Y

		STA SCN1_LINE56+19,Y
		STA SCN1_LINE56+18,Y
		STA SCN1_LINE56+17,Y
		STA SCN1_LINE56+16,Y
		STA SCN1_LINE56+15,Y
		STA SCN1_LINE56+14,Y
		STA SCN1_LINE56+13,Y
		STA SCN1_LINE56+12,Y
		STA SCN1_LINE56+11,Y
		STA SCN1_LINE56+10,Y

		STA SCN1_LINE56+09,Y
		STA SCN1_LINE56+08,Y
		STA SCN1_LINE56+07,Y
		STA SCN1_LINE56+06,Y
		STA SCN1_LINE56+05,Y
		STA SCN1_LINE56+04,Y
		STA SCN1_LINE56+03,Y
		STA SCN1_LINE56+02,Y
		STA SCN1_LINE56+01,Y
		STA SCN1_LINE56+00,Y
		FILL_LEFT
		FILL_RIGHT
		RTS
.ENDL

HEX0  .BYTE %11111100,%00110000,%11111100,%11111100,%11001100,%11111100,%11111100,%11111100,%11111100,%11111100,%11111100,%11111100,%11111100,%11110000,%11111100,%11111100 
HEX1  .BYTE %11001100,%11110000,%00001100,%00001100,%11001100,%11000000,%11000000,%00001100,%11001100,%11011100,%11001100,%11001100,%11001100,%11001100,%11000000,%11000000 
HEX2  .BYTE %11001100,%00110000,%11111100,%11111100,%11111100,%11111100,%11111100,%00001100,%11111100,%11111100,%11111100,%11110000,%11000000,%11001100,%11111100,%11111100
HEX3  .BYTE %11001100,%00110000,%11000000,%00001100,%00001100,%00001100,%11001100,%00001100,%11001100,%00001100,%11001100,%11001100,%11001100,%11001100,%11000000,%11000000
HEX4  .BYTE %11111100,%11111100,%11111100,%11111100,%00001100,%11111100,%11111100,%00001100,%11111100,%11111100,%11001100,%11111100,%11111100,%11110000,%11111100,%11000000

	.ALIGN $100
RGT_MASK_TAB
.REPT	32
	.BYTE	%00111111,%00001111,%00000011,%00000000
.ENDR
RGT_NEG_MASK_TAB
.REPT	32
	.BYTE	%11000000,%11110000,%11111100,%11111111
.ENDR
LFT_NEG_MASK_TAB
.REPT	32
	.BYTE	%11111111,%00111111,%00001111,%00000011
.ENDR
LFT_MASK_TAB
.REPT	32
	.BYTE	%00000000,%11000000,%11110000,%11111100
.ENDR

;LOOKUP SCR TAB HI, LOOKUP SCR TAB LO, LOOKUP Y VALUE FOR SCREEN POS
	.ALIGN $100
SCR0_LINE_TAB_HI
	.BYTE >SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07,>SCR0_LINE_00_07
	.BYTE >SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15,>SCR0_LINE_08_15
	.BYTE >SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23,>SCR0_LINE_16_23
	.BYTE >SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31,>SCR0_LINE_24_31
	.BYTE >SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39,>SCR0_LINE_32_39
	.BYTE >SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47,>SCR0_LINE_40_47
	.BYTE >SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55,>SCR0_LINE_48_55
	.BYTE >SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63,>SCR0_LINE_56_63
SCR1_LINE_TAB_HI
	.BYTE >SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07,>SCR1_LINE_00_07
	.BYTE >SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15,>SCR1_LINE_08_15
	.BYTE >SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23,>SCR1_LINE_16_23
	.BYTE >SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31,>SCR1_LINE_24_31
	.BYTE >SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39,>SCR1_LINE_32_39
	.BYTE >SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47,>SCR1_LINE_40_47
	.BYTE >SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55,>SCR1_LINE_48_55
	.BYTE >SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63,>SCR1_LINE_56_63
SCR0_LINE_TAB_LO
	.BYTE <SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07,<SCR0_LINE_00_07
	.BYTE <SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15,<SCR0_LINE_08_15
	.BYTE <SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23,<SCR0_LINE_16_23
	.BYTE <SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31,<SCR0_LINE_24_31
	.BYTE <SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39,<SCR0_LINE_32_39
	.BYTE <SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47,<SCR0_LINE_40_47
	.BYTE <SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55,<SCR0_LINE_48_55
	.BYTE <SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63,<SCR0_LINE_56_63
SCR_LINE_Y_TAB
.REPT	8
	.BYTE 0*32+1,1*32+1,2*32+1,3*32+1,4*32+1,5*32+1,6*32+1,7*32+1
.ENDR

	.ALIGN $100
SCR0_LINE_HI	
	.BYTE >SCN0_LINE00,>SCN0_LINE01,>SCN0_LINE02,>SCN0_LINE03,>SCN0_LINE04,>SCN0_LINE05,>SCN0_LINE06,>SCN0_LINE07,>SCN0_LINE08,>SCN0_LINE09
	.BYTE >SCN0_LINE10,>SCN0_LINE11,>SCN0_LINE12,>SCN0_LINE13,>SCN0_LINE14,>SCN0_LINE15,>SCN0_LINE16,>SCN0_LINE17,>SCN0_LINE18,>SCN0_LINE19
	.BYTE >SCN0_LINE20,>SCN0_LINE21,>SCN0_LINE22,>SCN0_LINE23,>SCN0_LINE24,>SCN0_LINE25,>SCN0_LINE26,>SCN0_LINE27,>SCN0_LINE28,>SCN0_LINE29
	.BYTE >SCN0_LINE30,>SCN0_LINE31,>SCN0_LINE32,>SCN0_LINE33,>SCN0_LINE34,>SCN0_LINE35,>SCN0_LINE36,>SCN0_LINE37,>SCN0_LINE38,>SCN0_LINE39
	.BYTE >SCN0_LINE40,>SCN0_LINE41,>SCN0_LINE42,>SCN0_LINE43,>SCN0_LINE44,>SCN0_LINE45,>SCN0_LINE46,>SCN0_LINE47,>SCN0_LINE48,>SCN0_LINE49
	.BYTE >SCN0_LINE50,>SCN0_LINE51,>SCN0_LINE52,>SCN0_LINE53,>SCN0_LINE54,>SCN0_LINE55,>SCN0_LINE56,>SCN0_LINE57,>SCN0_LINE58,>SCN0_LINE59
	.BYTE >SCN0_LINE60,>SCN0_LINE61,>SCN0_LINE62,>SCN0_LINE63
SCR1_LINE_HI	
	.BYTE >SCN1_LINE00,>SCN1_LINE01,>SCN1_LINE02,>SCN1_LINE03,>SCN1_LINE04,>SCN1_LINE05,>SCN1_LINE06,>SCN1_LINE07,>SCN1_LINE08,>SCN1_LINE09
	.BYTE >SCN1_LINE10,>SCN1_LINE11,>SCN1_LINE12,>SCN1_LINE13,>SCN1_LINE14,>SCN1_LINE15,>SCN1_LINE16,>SCN1_LINE17,>SCN1_LINE18,>SCN1_LINE19
	.BYTE >SCN1_LINE20,>SCN1_LINE21,>SCN1_LINE22,>SCN1_LINE23,>SCN1_LINE24,>SCN1_LINE25,>SCN1_LINE26,>SCN1_LINE27,>SCN1_LINE28,>SCN1_LINE29
	.BYTE >SCN1_LINE30,>SCN1_LINE31,>SCN1_LINE32,>SCN1_LINE33,>SCN1_LINE34,>SCN1_LINE35,>SCN1_LINE36,>SCN1_LINE37,>SCN1_LINE38,>SCN1_LINE39
	.BYTE >SCN1_LINE40,>SCN1_LINE41,>SCN1_LINE42,>SCN1_LINE43,>SCN1_LINE44,>SCN1_LINE45,>SCN1_LINE46,>SCN1_LINE47,>SCN1_LINE48,>SCN1_LINE49
	.BYTE >SCN1_LINE50,>SCN1_LINE51,>SCN1_LINE52,>SCN1_LINE53,>SCN1_LINE54,>SCN1_LINE55,>SCN1_LINE56,>SCN1_LINE57,>SCN1_LINE58,>SCN1_LINE59
	.BYTE >SCN1_LINE60,>SCN1_LINE61,>SCN1_LINE62,>SCN1_LINE63
SCR0_LINE_LO
	.BYTE <SCN0_LINE00,<SCN0_LINE01,<SCN0_LINE02,<SCN0_LINE03,<SCN0_LINE04,<SCN0_LINE05,<SCN0_LINE06,<SCN0_LINE07,<SCN0_LINE08,<SCN0_LINE09
	.BYTE <SCN0_LINE10,<SCN0_LINE11,<SCN0_LINE12,<SCN0_LINE13,<SCN0_LINE14,<SCN0_LINE15,<SCN0_LINE16,<SCN0_LINE17,<SCN0_LINE18,<SCN0_LINE19
	.BYTE <SCN0_LINE20,<SCN0_LINE21,<SCN0_LINE22,<SCN0_LINE23,<SCN0_LINE24,<SCN0_LINE25,<SCN0_LINE26,<SCN0_LINE27,<SCN0_LINE28,<SCN0_LINE29
	.BYTE <SCN0_LINE30,<SCN0_LINE31,<SCN0_LINE32,<SCN0_LINE33,<SCN0_LINE34,<SCN0_LINE35,<SCN0_LINE36,<SCN0_LINE37,<SCN0_LINE38,<SCN0_LINE39
	.BYTE <SCN0_LINE40,<SCN0_LINE41,<SCN0_LINE42,<SCN0_LINE43,<SCN0_LINE44,<SCN0_LINE45,<SCN0_LINE46,<SCN0_LINE47,<SCN0_LINE48,<SCN0_LINE49
	.BYTE <SCN0_LINE50,<SCN0_LINE51,<SCN0_LINE52,<SCN0_LINE53,<SCN0_LINE54,<SCN0_LINE55,<SCN0_LINE56,<SCN0_LINE57,<SCN0_LINE58,<SCN0_LINE59
	.BYTE <SCN0_LINE60,<SCN0_LINE61,<SCN0_LINE62,<SCN0_LINE63
	
	.ALIGN $100
SCR_HOR
 .BYTE 00,00,00,00,01,01,01,01,02,02,02,02,03,03,03,03,04,04,04,04,05,05,05,05,06,06,06,06,07,07,07,07
 .BYTE 08,08,08,08,09,09,09,09,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15
 .BYTE 16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23
 .BYTE 24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31
INS_HOR_TAB
	.BYTE 31*3-0
	.BYTE 30*3-0,29*3-0,28*3-0,27*3-0,26*3-0,25*3-0,24*3-0,23*3-0,22*3-0,21*3-0
	.BYTE 20*3-0,19*3-0,18*3-0,17*3-0,16*3-0,15*3-0,14*3-0,13*3-0,12*3-0,11*3-0
	.BYTE 10*3-0, 9*3-0, 8*3-0, 7*3-0, 6*3-0, 5*3-0, 4*3-0, 3*3-0, 2*3-0, 1*3-0, 0*3-0
	 
SCR_OR
.REPT	32
 .BYTE $C0,$30,$0C,$03
.ENDR
SCR_AND
.REPT	32
 .BYTE $3F,$CF,$F3,$FC
.ENDR

.MACRO	DLI_LINE DLI_ADDR, SCREEN_MODE
    .BYTE SCREEN_ADR+:2,<:1,>:1
.ENDM 

	.ALIGN $400
DL0	.BYTE BLANK_LINE,BLANK_LINE,BLANK_LINE	; Discard 24 scan lines
	DLI_LINE SCN0_LINE00 SM
	DLI_LINE SCN0_LINE01 SM
	DLI_LINE SCN0_LINE02 SM
	DLI_LINE SCN0_LINE03 SM
	DLI_LINE SCN0_LINE04 SM
	DLI_LINE SCN0_LINE05 SM
	DLI_LINE SCN0_LINE06 SM
	DLI_LINE SCN0_LINE07 SM	
	DLI_LINE SCN0_LINE08 SM
	DLI_LINE SCN0_LINE09 SM

	DLI_LINE SCN0_LINE10 SM
	DLI_LINE SCN0_LINE11 SM
	DLI_LINE SCN0_LINE12 SM
	DLI_LINE SCN0_LINE13 SM
	DLI_LINE SCN0_LINE14 SM
	DLI_LINE SCN0_LINE15 SM
	DLI_LINE SCN0_LINE16 SM
	DLI_LINE SCN0_LINE17 SM
	DLI_LINE SCN0_LINE18 SM
	DLI_LINE SCN0_LINE19 SM

	DLI_LINE SCN0_LINE20 SM
	DLI_LINE SCN0_LINE21 SM
	DLI_LINE SCN0_LINE22 SM
	DLI_LINE SCN0_LINE23 SM
	DLI_LINE SCN0_LINE24 SM
	DLI_LINE SCN0_LINE25 SM
	DLI_LINE SCN0_LINE26 SM
	DLI_LINE SCN0_LINE27 SM
	DLI_LINE SCN0_LINE28 SM
	DLI_LINE SCN0_LINE29 SM

	DLI_LINE SCN0_LINE30 SM
	DLI_LINE SCN0_LINE31 SM
	DLI_LINE SCN0_LINE32 SM
	DLI_LINE SCN0_LINE33 SM
	DLI_LINE SCN0_LINE34 SM
	DLI_LINE SCN0_LINE35 SM
	DLI_LINE SCN0_LINE36 SM
	DLI_LINE SCN0_LINE37 SM
	DLI_LINE SCN0_LINE38 SM
	DLI_LINE SCN0_LINE39 SM

	DLI_LINE SCN0_LINE40 SM
	DLI_LINE SCN0_LINE41 SM
	DLI_LINE SCN0_LINE42 SM
	DLI_LINE SCN0_LINE43 SM
	DLI_LINE SCN0_LINE44 SM
	DLI_LINE SCN0_LINE45 SM
	DLI_LINE SCN0_LINE46 SM
	DLI_LINE SCN0_LINE47 SM
	DLI_LINE SCN0_LINE48 SM
	DLI_LINE SCN0_LINE49 SM

	DLI_LINE SCN0_LINE50 SM
	DLI_LINE SCN0_LINE51 SM
	DLI_LINE SCN0_LINE52 SM
	DLI_LINE SCN0_LINE53 SM
	DLI_LINE SCN0_LINE54 SM
	DLI_LINE SCN0_LINE55 SM
	DLI_LINE SCN0_LINE56 SM
	DLI_LINE SCN0_LINE57 SM
	DLI_LINE SCN0_LINE58 SM
	DLI_LINE SCN0_LINE59 SM

	DLI_LINE SCN0_LINE60 SM
	DLI_LINE SCN0_LINE61 SM
	DLI_LINE SCN0_LINE62 SM
	DLI_LINE SCN0_LINE63 SM

	.BYTE DLI_INT
	.BYTE DISP_LIST,<DL0,>DL0

DL1	.BYTE BLANK_LINE,BLANK_LINE,BLANK_LINE	; Discard 24 scan lines
	DLI_LINE SCN1_LINE00 SM
	DLI_LINE SCN1_LINE01 SM
	DLI_LINE SCN1_LINE02 SM
	DLI_LINE SCN1_LINE03 SM
	DLI_LINE SCN1_LINE04 SM
	DLI_LINE SCN1_LINE05 SM
	DLI_LINE SCN1_LINE06 SM
	DLI_LINE SCN1_LINE07 SM
	DLI_LINE SCN1_LINE08 SM
	DLI_LINE SCN1_LINE09 SM

	DLI_LINE SCN1_LINE10 SM
	DLI_LINE SCN1_LINE11 SM
	DLI_LINE SCN1_LINE12 SM
	DLI_LINE SCN1_LINE13 SM
	DLI_LINE SCN1_LINE14 SM
	DLI_LINE SCN1_LINE15 SM
	DLI_LINE SCN1_LINE16 SM
	DLI_LINE SCN1_LINE17 SM
	DLI_LINE SCN1_LINE18 SM
	DLI_LINE SCN1_LINE19 SM

	DLI_LINE SCN1_LINE20 SM
	DLI_LINE SCN1_LINE21 SM
	DLI_LINE SCN1_LINE22 SM
	DLI_LINE SCN1_LINE23 SM
	DLI_LINE SCN1_LINE24 SM
	DLI_LINE SCN1_LINE25 SM
	DLI_LINE SCN1_LINE26 SM
	DLI_LINE SCN1_LINE27 SM
	DLI_LINE SCN1_LINE28 SM
	DLI_LINE SCN1_LINE29 SM

	DLI_LINE SCN1_LINE30 SM
	DLI_LINE SCN1_LINE31 SM
	DLI_LINE SCN1_LINE32 SM
	DLI_LINE SCN1_LINE33 SM
	DLI_LINE SCN1_LINE34 SM
	DLI_LINE SCN1_LINE35 SM
	DLI_LINE SCN1_LINE36 SM
	DLI_LINE SCN1_LINE37 SM
	DLI_LINE SCN1_LINE38 SM
	DLI_LINE SCN1_LINE39 SM

	DLI_LINE SCN1_LINE40 SM
	DLI_LINE SCN1_LINE41 SM
	DLI_LINE SCN1_LINE42 SM
	DLI_LINE SCN1_LINE43 SM
	DLI_LINE SCN1_LINE44 SM
	DLI_LINE SCN1_LINE45 SM
	DLI_LINE SCN1_LINE46 SM
	DLI_LINE SCN1_LINE47 SM
	DLI_LINE SCN1_LINE48 SM
	DLI_LINE SCN1_LINE49 SM

	DLI_LINE SCN1_LINE50 SM
	DLI_LINE SCN1_LINE51 SM
	DLI_LINE SCN1_LINE52 SM
	DLI_LINE SCN1_LINE53 SM
	DLI_LINE SCN1_LINE54 SM
	DLI_LINE SCN1_LINE55 SM
	DLI_LINE SCN1_LINE56 SM
	DLI_LINE SCN1_LINE57 SM
	DLI_LINE SCN1_LINE58 SM
	DLI_LINE SCN1_LINE59 SM

	DLI_LINE SCN1_LINE60 SM
	DLI_LINE SCN1_LINE61 SM
	DLI_LINE SCN1_LINE62 SM
	DLI_LINE SCN1_LINE63 SM

	.BYTE DLI_INT
	.BYTE DISP_LIST,<DL1,>DL1

.ALIGN $1000
SCN0_T ; screen	
SCN1_T = SCN0_T +$800 ; 2048

SCN0_LINE00 = SCN0_T 					;+(32*64)
SCN0_LINE01 = SCN0_LINE00 +(32*01)
SCN0_LINE02 = SCN0_LINE00 +(32*02)
SCN0_LINE03 = SCN0_LINE00 +(32*03)
SCN0_LINE04 = SCN0_LINE00 +(32*04)
SCN0_LINE05 = SCN0_LINE00 +(32*05)
SCN0_LINE06 = SCN0_LINE00 +(32*06)
SCN0_LINE07 = SCN0_LINE00 +(32*07)
SCN0_LINE08 = SCN0_LINE00 +(32*08)
SCN0_LINE09 = SCN0_LINE00 +(32*09)

SCN0_LINE10 = SCN0_LINE00 +(32*10)
SCN0_LINE11 = SCN0_LINE00 +(32*11)
SCN0_LINE12 = SCN0_LINE00 +(32*12)
SCN0_LINE13 = SCN0_LINE00 +(32*13)
SCN0_LINE14 = SCN0_LINE00 +(32*14)
SCN0_LINE15 = SCN0_LINE00 +(32*15)
SCN0_LINE16 = SCN0_LINE00 +(32*16)
SCN0_LINE17 = SCN0_LINE00 +(32*17)
SCN0_LINE18 = SCN0_LINE00 +(32*18)
SCN0_LINE19 = SCN0_LINE00 +(32*19)

SCN0_LINE20 = SCN0_LINE00 +(32*20)
SCN0_LINE21 = SCN0_LINE00 +(32*21)
SCN0_LINE22 = SCN0_LINE00 +(32*22)
SCN0_LINE23 = SCN0_LINE00 +(32*23)
SCN0_LINE24 = SCN0_LINE00 +(32*24)
SCN0_LINE25 = SCN0_LINE00 +(32*25)
SCN0_LINE26 = SCN0_LINE00 +(32*26)
SCN0_LINE27 = SCN0_LINE00 +(32*27)
SCN0_LINE28 = SCN0_LINE00 +(32*28)
SCN0_LINE29 = SCN0_LINE00 +(32*29)

SCN0_LINE30 = SCN0_LINE00 +(32*30)
SCN0_LINE31 = SCN0_LINE00 +(32*31)
SCN0_LINE32 = SCN0_LINE00 +(32*32)
SCN0_LINE33 = SCN0_LINE00 +(32*33)
SCN0_LINE34 = SCN0_LINE00 +(32*34)
SCN0_LINE35 = SCN0_LINE00 +(32*35)
SCN0_LINE36 = SCN0_LINE00 +(32*36)
SCN0_LINE37 = SCN0_LINE00 +(32*37)
SCN0_LINE38 = SCN0_LINE00 +(32*38)
SCN0_LINE39 = SCN0_LINE00 +(32*39)

SCN0_LINE40 = SCN0_LINE00 +(32*40)
SCN0_LINE41 = SCN0_LINE00 +(32*41)
SCN0_LINE42 = SCN0_LINE00 +(32*42)
SCN0_LINE43 = SCN0_LINE00 +(32*43)
SCN0_LINE44 = SCN0_LINE00 +(32*44)
SCN0_LINE45 = SCN0_LINE00 +(32*45)
SCN0_LINE46 = SCN0_LINE00 +(32*46)
SCN0_LINE47 = SCN0_LINE00 +(32*47)
SCN0_LINE48 = SCN0_LINE00 +(32*48)
SCN0_LINE49 = SCN0_LINE00 +(32*49)

SCN0_LINE50 = SCN0_LINE00 +(32*50)
SCN0_LINE51 = SCN0_LINE00 +(32*51)
SCN0_LINE52 = SCN0_LINE00 +(32*52)
SCN0_LINE53 = SCN0_LINE00 +(32*53)
SCN0_LINE54 = SCN0_LINE00 +(32*54)
SCN0_LINE55 = SCN0_LINE00 +(32*55)
SCN0_LINE56 = SCN0_LINE00 +(32*56)
SCN0_LINE57 = SCN0_LINE00 +(32*57)
SCN0_LINE58 = SCN0_LINE00 +(32*58)
SCN0_LINE59 = SCN0_LINE00 +(32*59)

SCN0_LINE60 = SCN0_LINE00 +(32*60)
SCN0_LINE61 = SCN0_LINE00 +(32*61)
SCN0_LINE62 = SCN0_LINE00 +(32*62)
SCN0_LINE63 = SCN0_LINE00 +(32*63)

SCN1_LINE00 = SCN1_T 					;+(32*64)
SCN1_LINE01 = SCN1_LINE00 +(32*01)
SCN1_LINE02 = SCN1_LINE00 +(32*02)
SCN1_LINE03 = SCN1_LINE00 +(32*03)
SCN1_LINE04 = SCN1_LINE00 +(32*04)
SCN1_LINE05 = SCN1_LINE00 +(32*05)
SCN1_LINE06 = SCN1_LINE00 +(32*06)
SCN1_LINE07 = SCN1_LINE00 +(32*07)
SCN1_LINE08 = SCN1_LINE00 +(32*08)
SCN1_LINE09 = SCN1_LINE00 +(32*09)

SCN1_LINE10 = SCN1_LINE00 +(32*10)
SCN1_LINE11 = SCN1_LINE00 +(32*11)
SCN1_LINE12 = SCN1_LINE00 +(32*12)
SCN1_LINE13 = SCN1_LINE00 +(32*13)
SCN1_LINE14 = SCN1_LINE00 +(32*14)
SCN1_LINE15 = SCN1_LINE00 +(32*15)
SCN1_LINE16 = SCN1_LINE00 +(32*16)
SCN1_LINE17 = SCN1_LINE00 +(32*17)
SCN1_LINE18 = SCN1_LINE00 +(32*18)
SCN1_LINE19 = SCN1_LINE00 +(32*19)

SCN1_LINE20 = SCN1_LINE00 +(32*20)
SCN1_LINE21 = SCN1_LINE00 +(32*21)
SCN1_LINE22 = SCN1_LINE00 +(32*22)
SCN1_LINE23 = SCN1_LINE00 +(32*23)
SCN1_LINE24 = SCN1_LINE00 +(32*24)
SCN1_LINE25 = SCN1_LINE00 +(32*25)
SCN1_LINE26 = SCN1_LINE00 +(32*26)
SCN1_LINE27 = SCN1_LINE00 +(32*27)
SCN1_LINE28 = SCN1_LINE00 +(32*28)
SCN1_LINE29 = SCN1_LINE00 +(32*29)

SCN1_LINE30 = SCN1_LINE00 +(32*30)
SCN1_LINE31 = SCN1_LINE00 +(32*31)
SCN1_LINE32 = SCN1_LINE00 +(32*32)
SCN1_LINE33 = SCN1_LINE00 +(32*33)
SCN1_LINE34 = SCN1_LINE00 +(32*34)
SCN1_LINE35 = SCN1_LINE00 +(32*35)
SCN1_LINE36 = SCN1_LINE00 +(32*36)
SCN1_LINE37 = SCN1_LINE00 +(32*37)
SCN1_LINE38 = SCN1_LINE00 +(32*38)
SCN1_LINE39 = SCN1_LINE00 +(32*39)

SCN1_LINE40 = SCN1_LINE00 +(32*40)
SCN1_LINE41 = SCN1_LINE00 +(32*41)
SCN1_LINE42 = SCN1_LINE00 +(32*42)
SCN1_LINE43 = SCN1_LINE00 +(32*43)
SCN1_LINE44 = SCN1_LINE00 +(32*44)
SCN1_LINE45 = SCN1_LINE00 +(32*45)
SCN1_LINE46 = SCN1_LINE00 +(32*46)
SCN1_LINE47 = SCN1_LINE00 +(32*47)
SCN1_LINE48 = SCN1_LINE00 +(32*48)
SCN1_LINE49 = SCN1_LINE00 +(32*49)

SCN1_LINE50 = SCN1_LINE00 +(32*50)
SCN1_LINE51 = SCN1_LINE00 +(32*51)
SCN1_LINE52 = SCN1_LINE00 +(32*52)
SCN1_LINE53 = SCN1_LINE00 +(32*53)
SCN1_LINE54 = SCN1_LINE00 +(32*54)
SCN1_LINE55 = SCN1_LINE00 +(32*55)
SCN1_LINE56 = SCN1_LINE00 +(32*56)
SCN1_LINE57 = SCN1_LINE00 +(32*57)
SCN1_LINE58 = SCN1_LINE00 +(32*58)
SCN1_LINE59 = SCN1_LINE00 +(32*59)

SCN1_LINE60 = SCN1_LINE00 +(32*60)
SCN1_LINE61 = SCN1_LINE00 +(32*61)
SCN1_LINE62 = SCN1_LINE00 +(32*62)
SCN1_LINE63 = SCN1_LINE00 +(32*63)
