
	SCR_WID	EQU 42
	SW		EQU SCR_WID

	SCREEN_MODE	EQU	$0E
	SM			EQU	SCREEN_MODE
	SCREEN_MODE_HI_RES EQU $0F
	SM_HR		EQU	SCREEN_MODE_HI_RES
	BLANK_LINE	EQU $70
	SCREEN_ADR	EQU	$40
	DISP_LIST	EQU	$41
	DLI_INT		EQU	$80

	SCR0 	EQU	128
	SCR1 	EQU	SCR0 +2
	SCR2 	EQU	SCR1 +2
	SCR3 	EQU	SCR2 +2
	SCR4 	EQU	SCR3 +2
	SCR5 	EQU	SCR4 +2
	SCR6 	EQU	SCR5 +2
	SCR7 	EQU	SCR6 +2

	REGA EQU SCR7 +2
	REGX EQU REGA +1
	REGY EQU REGX +1

	SCR0_OBJ_CNT EQU REGY +1
	SCR1_OBJ_CNT EQU SCR0_OBJ_CNT +1
	OBJECT_TYPE	 EQU SCR1_OBJ_CNT +1
	
	TV	EQU	OBJECT_TYPE +1
	TH	EQU	TV +1
	JOYV EQU TH +1
	JOYH EQU JOYV +1
	JOYF EQU JOYH +1
	HPOS EQU JOYF +1
	VPOS EQU HPOS +2
	
	MAP_PIXEL EQU VPOS +1
	
	SPR_AND EQU MAP_PIXEL +1
	SPR_ORA EQU SPR_AND +2

	SCN_ZP_01 EQU SPR_ORA +2
	SCN_ZP_02 EQU SCN_ZP_01 +2
	SCN_ZP_03 EQU SCN_ZP_02 +2
	SCN_ZP_04 EQU SCN_ZP_03 +2
	SCN_ZP_05 EQU SCN_ZP_04 +2
	SCN_ZP_06 EQU SCN_ZP_05 +2
	SCN_ZP_07 EQU SCN_ZP_06 +2
	SCN_ZP_08 EQU SCN_ZP_07 +2
	SCN_ZP_09 EQU SCN_ZP_08 +2
	SCN_ZP_10 EQU SCN_ZP_09 +2
	SCN_ZP_11 EQU SCN_ZP_10 +2
	SCN_ZP_12 EQU SCN_ZP_11 +2
	SCN_ZP_13 EQU SCN_ZP_12 +2
	SCN_ZP_14 EQU SCN_ZP_13 +2
	SCN_ZP_15 EQU SCN_ZP_14 +2
	SCN_ZP_16 EQU SCN_ZP_15 +2
	SCN_ZP_17 EQU SCN_ZP_16 +2
	SCN_ZP_18 EQU SCN_ZP_17 +2
	SCN_ZP_19 EQU SCN_ZP_18 +2
	SCN_ZP_20 EQU SCN_ZP_19 +2
	SCN_ZP_21 EQU SCN_ZP_20 +2
	SCN_ZP_22 EQU SCN_ZP_21 +2
	SCN_ZP_23 EQU SCN_ZP_22 +2
	SCN_ZP_24 EQU SCN_ZP_23 +2
	SCN_ZP_25 EQU SCN_ZP_24 +2
	SCN_ZP_26 EQU SCN_ZP_25 +2
	SCN_ZP_27 EQU SCN_ZP_26 +2
	SCN_ZP_28 EQU SCN_ZP_27 +2
	SCN_ZP_29 EQU SCN_ZP_28 +2
	SCN_ZP_30 EQU SCN_ZP_29 +2
	SCN_ZP_31 EQU SCN_ZP_30 +2
	SCN_ZP_32 EQU SCN_ZP_31 +2

	MAP_LFT_ADDR 	EQU SCN_ZP_32 +2
	MAP_RGT_ADDR 	EQU MAP_LFT_ADDR +2
	MAP_POS 		EQU MAP_RGT_ADDR +2

	SPR_LINE_0	EQU	0*42
	SPR_LINE_1	EQU	1*42
	SPR_LINE_2	EQU	2*42
	SPR_LINE_3	EQU	3*42
	SPR_LINE_4	EQU	4*42
	SPR_LINE_5	EQU	5*42

 ICL 'hardware.s'

.MACRO	BORDER	COL
			LDA #:1
			STA COLBK
.ENDM 

	ORG $800
				
INIT	SEI
		CLD
		CLV
		LDX	#$FF
		TXS

		LDA PORTB ; disable basic
		ORA #$02
		STA PORTB
			 	
		LDA #$00 ; disable antic
	    STA SDMCTL
	    STA DMACTL

		LDA #$B6 	; set colours
;		STA	COLPF0 
		STA COLOR0
		LDA #$32
;		STA	COLPF1 
		STA COLOR1
		LDA #$0E
;		STA COLPF2 
		STA COLOR2
		LDA #$00
		STA COLOR4; background / border

		LDX #<DISPLAY_LIST	; Extract low BYTE from DISPLAY_LIST and store it in SDLSTL
		LDY #>DISPLAY_LIST
		STX SDLSTL
		STY SDLSTL+1		; Therefore tell antic the starting address of the custom display list.

        LDX #<DLI	; load display list interrupt address
        LDY #>DLI
		STX VDSLST
        STY VDSLST+1

		ldx #<IRQ
        ldy #>IRQ
        stx VIMIRQ
        sty VIMIRQ+1

;        ldx #<VBLANK
;        ldy #>VBLANK
;        stx VVBLKI
;        sty VVBLKI+1
 
		LDA #$22 			; narrow 23 wide ; #$22       		;
		STA SDMCTL     		; Store literal $23 in SDMCTL - therefore switch ANTIC back on to narrow.
		
		LDA #2
		STA TH
		STA	TV
;		LDA	#22
;		STA	SCR0_OBJ_CNT
;		STA	SCR1_OBJ_CNT
		
		LDA #%01010101
		LDX #<GRY_LINE_ADR
		LDY #>GRY_LINE_ADR
		STX SCR0+0
		STY SCR0+1
		LDX #>40
		LDY #<40
		JSR	MEMSET

		LDA #%10101010
		LDX #<BLK_LINE_ADR
		LDY #>BLK_LINE_ADR
		STX SCR0+0
		STY SCR0+1
		LDX #>40
		LDY #<40
		JSR	MEMSET

		LDA #%11111111 ; 00000000
		LDX #<(TXT_SCR_ADR -2)
		LDY #>(TXT_SCR_ADR -2)
		STX SCR0+0
		STY SCR0+1
		LDX #>((5*40)+1)
		LDY #<((5*40)+1)
		JSR	MEMSET

		LDA #%10101010
		LDX #<MAP_SCR_ADR
		LDY #>MAP_SCR_ADR
		STX SCR0+0
		STY SCR0+1
		LDX #>(20*40)
		LDY #<(20*40)
		JSR	MEMSET

		LDA #%01010101
		LDX #<SCN0_LINE000
		LDY #>SCN0_LINE000
		STX SCR0+0
		STY SCR0+1
		LDX #<(WHT_LINE_ADR - SCN0_LINE000)
		LDX #>(WHT_LINE_ADR - SCN0_LINE000)
;		JSR	MEMSET

		LDA #%11111111 ;0001111
		LDX #<WHT_LINE_ADR
		LDY #>WHT_LINE_ADR
		STX SCR0+0
		STY SCR0+1
		LDX #>40
		LDY #<40
		JSR	MEMSET

	JSR SET_LANDSCAPE
	JSR DRW_LANDSCAPE

        LDA #(NMIEN_VBI | NMIEN_DLI)	; activate display list interrupt
        STA NMIEN

		CLI
		
MLOOP
		JMP	MLOOP

.MACRO SET_LANDSCAPE_ZP SCN_ADDR, ZP_ADDR
			LDA #<:1
			STA :2
			LDA #>:1
			STA :2 +1
.ENDM

.LOCAL 	SET_LANDSCAPE

		SET_LANDSCAPE_ZP SCN0_LINE120, SCN_ZP_01
		SET_LANDSCAPE_ZP SCN0_LINE121, SCN_ZP_02
		SET_LANDSCAPE_ZP SCN0_LINE122, SCN_ZP_03
		SET_LANDSCAPE_ZP SCN0_LINE123, SCN_ZP_04
		SET_LANDSCAPE_ZP SCN0_LINE124, SCN_ZP_05
		SET_LANDSCAPE_ZP SCN0_LINE125, SCN_ZP_06
		SET_LANDSCAPE_ZP SCN0_LINE126, SCN_ZP_07
		SET_LANDSCAPE_ZP SCN0_LINE127, SCN_ZP_08

		SET_LANDSCAPE_ZP SCN0_LINE128, SCN_ZP_09
		SET_LANDSCAPE_ZP SCN0_LINE129, SCN_ZP_10
		SET_LANDSCAPE_ZP SCN0_LINE130, SCN_ZP_11
		SET_LANDSCAPE_ZP SCN0_LINE131, SCN_ZP_12
		SET_LANDSCAPE_ZP SCN0_LINE132, SCN_ZP_13
		SET_LANDSCAPE_ZP SCN0_LINE133, SCN_ZP_14
		SET_LANDSCAPE_ZP SCN0_LINE134, SCN_ZP_15
		SET_LANDSCAPE_ZP SCN0_LINE135, SCN_ZP_16

		SET_LANDSCAPE_ZP SCN0_LINE136, SCN_ZP_17
		SET_LANDSCAPE_ZP SCN0_LINE137, SCN_ZP_18
		SET_LANDSCAPE_ZP SCN0_LINE138, SCN_ZP_19
		SET_LANDSCAPE_ZP SCN0_LINE139, SCN_ZP_20
		SET_LANDSCAPE_ZP SCN0_LINE140, SCN_ZP_21
		SET_LANDSCAPE_ZP SCN0_LINE141, SCN_ZP_22
		SET_LANDSCAPE_ZP SCN0_LINE142, SCN_ZP_23
		SET_LANDSCAPE_ZP SCN0_LINE143, SCN_ZP_24

		SET_LANDSCAPE_ZP SCN0_LINE144, SCN_ZP_25
		SET_LANDSCAPE_ZP SCN0_LINE145, SCN_ZP_26
		SET_LANDSCAPE_ZP SCN0_LINE146, SCN_ZP_27
		SET_LANDSCAPE_ZP SCN0_LINE147, SCN_ZP_28
		SET_LANDSCAPE_ZP SCN0_LINE148, SCN_ZP_29
		SET_LANDSCAPE_ZP SCN0_LINE149, SCN_ZP_30
		SET_LANDSCAPE_ZP SCN0_LINE150, SCN_ZP_31
		SET_LANDSCAPE_ZP SCN0_LINE150, SCN_ZP_32

		LDA #>MAP_LFT
		STA MAP_LFT_ADDR+1
		LDA #>MAP_RGT
		STA MAP_RGT_ADDR+1

		LDA	#0
		STA MAP_LFT_ADDR
		STA MAP_RGT_ADDR
	
		RTS		
.ENDL

.MACRO SET_LANDSCAPE_PIXEL map_addr_l, map_addr_r, zp_addr_l, zp_addr_r
		LDA (:1),Y
		STA :3 +1
		LDA (:2),Y
		STA :4 +1
.ENDM

.LOCAL	DRW_LANDSCAPE
		LDY #0
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_00, ZP_ADDR_RGT_00
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_01, ZP_ADDR_RGT_01
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_02, ZP_ADDR_RGT_02
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_03, ZP_ADDR_RGT_03
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_04, ZP_ADDR_RGT_04
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_05, ZP_ADDR_RGT_05
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_06, ZP_ADDR_RGT_06
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_07, ZP_ADDR_RGT_07
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_08, ZP_ADDR_RGT_08
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_09, ZP_ADDR_RGT_09

		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_10, ZP_ADDR_RGT_10
 		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_11, ZP_ADDR_RGT_11
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_12, ZP_ADDR_RGT_12
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_13, ZP_ADDR_RGT_13
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_14, ZP_ADDR_RGT_14
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_15, ZP_ADDR_RGT_15
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_16, ZP_ADDR_RGT_16
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_17, ZP_ADDR_RGT_17
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_18, ZP_ADDR_RGT_18
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_19, ZP_ADDR_RGT_19

		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_20, ZP_ADDR_RGT_20
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_21, ZP_ADDR_RGT_21
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_22, ZP_ADDR_RGT_22
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_23, ZP_ADDR_RGT_23
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_24, ZP_ADDR_RGT_24
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_25, ZP_ADDR_RGT_25
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_26, ZP_ADDR_RGT_26
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_27, ZP_ADDR_RGT_27
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_28, ZP_ADDR_RGT_28
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_29, ZP_ADDR_RGT_29

		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_30, ZP_ADDR_RGT_30
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_31, ZP_ADDR_RGT_31
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_32, ZP_ADDR_RGT_32
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_33, ZP_ADDR_RGT_33
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_34, ZP_ADDR_RGT_34
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_35, ZP_ADDR_RGT_35
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_36, ZP_ADDR_RGT_36
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_37, ZP_ADDR_RGT_37
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_38, ZP_ADDR_RGT_38
		INY
		SET_LANDSCAPE_PIXEL MAP_LFT_ADDR, MAP_RGT_ADDR, ZP_ADDR_LFT_39, ZP_ADDR_RGT_39

LFT_PLT	LDA #%11010000
RGT_PLT LDX #%00001101

CLR_LANDSCAPE
		LDY #2
ZP_ADDR_LFT_00 STA (0),Y 
		INY
ZP_ADDR_LFT_01 STA (0),Y
		INY
ZP_ADDR_LFT_02 STA (0),Y
		INY
ZP_ADDR_LFT_03 STA (0),Y
		INY
ZP_ADDR_LFT_04 STA (0),Y
		INY
ZP_ADDR_LFT_05 STA (0),Y
		INY
ZP_ADDR_LFT_06 STA (0),Y
		INY
ZP_ADDR_LFT_07 STA (0),Y
		INY
ZP_ADDR_LFT_08 STA (0),Y
		INY
ZP_ADDR_LFT_09 STA (0),Y

		INY
ZP_ADDR_LFT_10 STA (0),Y
		INY
ZP_ADDR_LFT_11 STA (0),Y
		INY
ZP_ADDR_LFT_12 STA (0),Y
		INY
ZP_ADDR_LFT_13 STA (0),Y
		INY
ZP_ADDR_LFT_14 STA (0),Y
		INY
ZP_ADDR_LFT_15 STA (0),Y
		INY
ZP_ADDR_LFT_16 STA (0),Y
		INY
ZP_ADDR_LFT_17 STA (0),Y
		INY
ZP_ADDR_LFT_18 STA (0),Y
		INY
ZP_ADDR_LFT_19 STA (0),Y

		INY
ZP_ADDR_LFT_20 STA (0),Y
		INY
ZP_ADDR_LFT_21 STA (0),Y
		INY
ZP_ADDR_LFT_22 STA (0),Y
		INY
ZP_ADDR_LFT_23 STA (0),Y
		INY
ZP_ADDR_LFT_24 STA (0),Y
		INY
ZP_ADDR_LFT_25 STA (0),Y
		INY
ZP_ADDR_LFT_26 STA (0),Y
		INY
ZP_ADDR_LFT_27 STA (0),Y
		INY
ZP_ADDR_LFT_28 STA (0),Y
		INY
ZP_ADDR_LFT_29 STA (0),Y

		INY
ZP_ADDR_LFT_30 STA (0),Y
		INY
ZP_ADDR_LFT_31 STA (0),Y
		INY
ZP_ADDR_LFT_32 STA (0),Y
		INY
ZP_ADDR_LFT_33 STA (0),Y
		INY
ZP_ADDR_LFT_34 STA (0),Y
		INY
ZP_ADDR_LFT_35 STA (0),Y
		INY
ZP_ADDR_LFT_36 STA (0),Y
		INY
ZP_ADDR_LFT_37 STA (0),Y
		INY
ZP_ADDR_LFT_38 STA (0),Y
		INY
ZP_ADDR_LFT_39 STA (0),Y

		TXA
		LDY #2
ZP_ADDR_RGT_00 STA (0),Y
		INY
ZP_ADDR_RGT_01 STA (0),Y
		INY
ZP_ADDR_RGT_02 STA (0),Y
		INY
ZP_ADDR_RGT_03 STA (0),Y
		INY
ZP_ADDR_RGT_04 STA (0),Y
		INY
ZP_ADDR_RGT_05 STA (0),Y
		INY
ZP_ADDR_RGT_06 STA (0),Y
		INY
ZP_ADDR_RGT_07 STA (0),Y
		INY
ZP_ADDR_RGT_08 STA (0),Y
		INY
ZP_ADDR_RGT_09 STA (0),Y

		INY
ZP_ADDR_RGT_10 STA (0),Y
		INY
ZP_ADDR_RGT_11 STA (0),Y
		INY
ZP_ADDR_RGT_12 STA (0),Y
		INY
ZP_ADDR_RGT_13 STA (0),Y
		INY
ZP_ADDR_RGT_14 STA (0),Y
		INY
ZP_ADDR_RGT_15 STA (0),Y
		INY
ZP_ADDR_RGT_16 STA (0),Y
		INY
ZP_ADDR_RGT_17 STA (0),Y
		INY
ZP_ADDR_RGT_18 STA (0),Y
		INY
ZP_ADDR_RGT_19 STA (0),Y

		INY
ZP_ADDR_RGT_20 STA (0),Y
		INY
ZP_ADDR_RGT_21 STA (0),Y
		INY
ZP_ADDR_RGT_22 STA (0),Y
		INY
ZP_ADDR_RGT_23 STA (0),Y
		INY
ZP_ADDR_RGT_24 STA (0),Y
		INY
ZP_ADDR_RGT_25 STA (0),Y
		INY
ZP_ADDR_RGT_26 STA (0),Y
		INY
ZP_ADDR_RGT_27 STA (0),Y
		INY
ZP_ADDR_RGT_28 STA (0),Y
		INY
ZP_ADDR_RGT_29 STA (0),Y

		INY
ZP_ADDR_RGT_30 STA (0),Y
		INY
ZP_ADDR_RGT_31 STA (0),Y
		INY
ZP_ADDR_RGT_32 STA (0),Y
		INY
ZP_ADDR_RGT_33 STA (0),Y
		INY
ZP_ADDR_RGT_34 STA (0),Y
		INY
ZP_ADDR_RGT_35 STA (0),Y
		INY
ZP_ADDR_RGT_36 STA (0),Y
		INY
ZP_ADDR_RGT_37 STA (0),Y
		INY
ZP_ADDR_RGT_38 STA (0),Y
		INY
ZP_ADDR_RGT_39 STA (0),Y

		RTS
.ENDL

.LOCAL	LINE_TEST
		PHA
		LDA	SC_LO,Y
		STA	SCR0
		LDA	SC0_HI,Y
		STA	SCR0+1 
		LDY	SCR_HOR,X
		PLA
		STA	(SCR0),Y 
		RTS
.ENDL

.LOCAL	DRW_SPRITE_24X06_2
		LDA	SC_LO,Y
		STA	SCR0
		LDA	SC0_HI,Y
		STA	SCR0+1

		LDA	SC_LO+1,Y
		STA	SCR1
		LDA	SC0_HI+1,Y
		STA	SCR1+1

		LDA	SC_LO+2,Y
		STA	SCR2
		LDA	SC0_HI+2,Y
		STA	SCR2+1

		LDA	SC_LO+3,Y
		STA	SCR3
		LDA	SC0_HI+3,Y
		STA	SCR3+1

		LDA	SC_LO+4,Y
		STA	SCR4
		LDA	SC0_HI+4,Y
		STA	SCR4+1

		LDA	SC_LO+5,Y
		STA	SCR5
		LDA	SC0_HI+5,Y
		STA	SCR5+1

		LDY	SCR_HOR,X

		LDA #%11111111
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		LDA #%10101010
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		LDA #%01010101
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y

		RTS
.ENDL

.LOCAL	CLR_SPRITE_24X06_2
		LDA	SC_LO,Y
		STA	SCR0
		LDA	SC0_HI,Y
		STA	SCR0+1

		LDA	SC_LO+1,Y
		STA	SCR1
		LDA	SC0_HI+1,Y
		STA	SCR1+1

		LDA	SC_LO+2,Y
		STA	SCR2
		LDA	SC0_HI+2,Y
		STA	SCR2+1

		LDA	SC_LO+3,Y
		STA	SCR3
		LDA	SC0_HI+3,Y
		STA	SCR3+1

		LDA	SC_LO+4,Y
		STA	SCR4
		LDA	SC0_HI+4,Y
		STA	SCR4+1

		LDA	SC_LO+5,Y
		STA	SCR5
		LDA	SC0_HI+5,Y
		STA	SCR5+1

		LDY	SCR_HOR,X

		LDA #0
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y

		RTS
.ENDL

.LOCAL	DRW_PLOT
		LDA	SC_LO,Y
		STA	SCR0
		LDA	SC0_HI,Y
		STA	SCR0+1
		LDY	SCR_HOR,X
		LDA (SCR0),Y
		ORA SCR_OR,X
        STA (SCR0),Y 
		RTS
.ENDL

.LOCAL	CLR_PLOT
		LDA	SC_LO,Y
		STA	CLR_SCR+1
		LDA	SC0_HI,Y
		STA	CLR_SCR+2
		LDY	SCR_HOR,X
		LDA #0
CLR_SCR	STA	$ABCD,Y
		RTS
.ENDL

.LOCAL	VBLANK ; notify main loop that VBLANK processing is done, when we are finished.
		pha
			BORDER $1C
;                lda     #$FF
;                sta     VBL_DONE
			BORDER 0
 
		pla
        rti
.ENDL

.LOCAL	IRQ
		pha
			BORDER $3A
                lda     #0
                sta     IRQEN
                lda     #$40
                sta     IRQEN
                lda     KBCODE
                ora     #$C0
 ;               sta     MY_KEY
			BORDER 0
                pla
                rti
.ENDL

TMP_CNT	.BYTE	23
TMPH	.BYTE 	0,1,117,117,3,15,22,25,33,35,43,45,53,57,63,67,73,73,81,83,91,93,103,107,113,115,121,111
TMPV	.BYTE 	0,181,3,179,3,17,21,27,31,35,41,45,51,55,61,65,71,75,81,85,91,95,101,105,111,115,121,113
;TMPH	.BYTE 	0,0,116,116,2,16,20,26,32,36,42,46,52,56,62,66,72,76,82,86,92,96,102,106,112,116,122,110
;TMPV	.BYTE 	0,180,2,178,2,16,22,26,32,36,42,46,52,56,62,66,72,76,82,86,92,96,102,106,112,116,122,112
TMPT	.BYTE	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
TMPMH	.BYTE	0,-1,+1,+1,-1,+1,+1,-1,-1,+1,+1,-1,-1,+1,+1,-1,-1,+1,+1,-1,-1,+1,+1,-1,-1,+1,+1,-1,-1,+1
TMPMV	.BYTE	0,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1,+1,-1

.LOCAL	CLEAR_SPRITES ; y moves to x and a moves to y
CLEAR_CNT	LDX #0
LOOP			STX	NEXT +1
CLEAR_H			LDA SCR0_OBJ_H,X ;   ,y
				STA REGX
CLEAR_V			LDA SCR0_OBJ_V,X ;   ,y
CLEAR_T			LDY SCR0_OBJ_T,X ; x ,y
				JSR CLEAR_SPRITE
NEXT			LDX #0
				DEX
				BPL	LOOP
			RTS
.ENDL

.LOCAL	DRAW_SPRITES
DRAW_CNT	LDX #0
LOOP			STX NEXT +1
DRAW_V			LDA SCR1_OBJ_V,X
				STA REGY
DRAW_H			LDA SCR1_OBJ_H,X
				STA REGX
DRAW_T			LDY SCR1_OBJ_T,X
				JSR DRAW_SPRITE
NEXT			LDX #0
				DEX
				BPL	LOOP
			RTS
.ENDL

.LOCAL	SWAP_SCREEN
;			LDA #>SCN0_T			; has screen0 just been displayed
;			CMP DLI_SCN_T_ADDR +2
;			BEQ SCN0_SCN1			; yes

SCN1_SCN0
;	LDA	#>SCN0_T			; no - so now show screen0
;			STA	DLI_SCN_T_ADDR +2
;			LDA	#>SCN0_B
;			STA	DLI_SCN_B_ADDR +2
;			LDA	#>SC1_HI			; and clear and draw on screen1
;			STA	CLEAR_01.SCPTC1 +2
;			STA	CLEAR_08.SCPTC8 +2
;			STA	DRAW_01.SCPTD1 +2
;			STA	DRAW_08.SCPTD8 +2

;			LDX	#<SCR0_OBJ_H
;			LDY	#<SCR0_OBJ_V
;			LDA #<SCR0_OBJ_T
;			STX CLEAR_SPRITES.CLEAR_H +1
;			STY CLEAR_SPRITES.CLEAR_V +1
;			STA CLEAR_SPRITES.CLEAR_T +1
;			STX DRAW_SPRITES.DRAW_H +1
;			STY DRAW_SPRITES.DRAW_V +1
;			STA DRAW_SPRITES.DRAW_T +1
;			STX MOVE_SPRITES.MOVE_H +1
;			STY MOVE_SPRITES.MOVE_V +1
;			STA MOVE_SPRITES.MOVE_T +1
			RTS

SCN0_SCN1
;	LDA	#>SCN1_T			; so now show screen1 
;			STA	DLI_SCN_T_ADDR +2
;			LDA	#>SCN1_B
;			STA	DLI_SCN_B_ADDR +2
;			LDA	#>SC0_HI			; and clear and draw on screen0
;			STA	CLEAR_01.SCPTC1 +2
;			STA	CLEAR_08.SCPTC8 +2
;			STA	DRAW_01.SCPTD1 +2
;			STA	DRAW_08.SCPTD8 +2

;			LDX	#<SCR1_OBJ_H
;			LDY	#<SCR1_OBJ_V
;			LDA #<SCR1_OBJ_T
;			STX CLEAR_SPRITES.CLEAR_H +1
;			STY CLEAR_SPRITES.CLEAR_V +1
;			STA CLEAR_SPRITES.CLEAR_T +1
;			STX DRAW_SPRITES.DRAW_H +1
;			STY DRAW_SPRITES.DRAW_V +1
;			STA DRAW_SPRITES.DRAW_T +1
;			STX MOVE_SPRITES.MOVE_H +1
;			STY MOVE_SPRITES.MOVE_V +1
;			STA MOVE_SPRITES.MOVE_T +1
			RTS
.ENDL	

.LOCAL	DLI
;			PHP
			STA INTREGA +1
			STX INTREGX +1
			STY INTREGY +1

			BORDER $28			
;			JSR	SWAP_SCREEN ; also swap this and previous list
				
; 			BORDER $7A
;			JSR	CLEAR_SPRITES ; clear previous list

.REPT 9
		LDX TH
		LDY VPOS
		JSR CLR_SPRITE_24X06
.ENDR

 			BORDER $73

.REPT 27
		LDX #50
		LDY #50
		JSR CLR_PLOT
.ENDR

			BORDER $57

		LDA #0
		TAX
		JSR DRW_LANDSCAPE.CLR_LANDSCAPE

		LDA	TV
		LDX	#3
		JSR	HEX8

		LDA	TH
		LDX	#6
		JSR	HEX8

		LDY	TV
		LDA	TH
		LDX #9
		JSR	HEX16

		LDY MAP_PIXEL
		LDA MAP_LFT_ADDR
		LDX	#15
		JSR	HEX16

		LDY HPOS
		LDA HPOS +1
		LDX	#21
		JSR	HEX16

			BORDER $20
			JSR	JOYSTICK

			BORDER $66
.REPT 9
		LDX TH
		LDY VPOS
		JSR DRW_SPRITE_24X06
.ENDR

			BORDER $22
.REPT 27
		LDX #50
		LDY #50
		JSR DRW_PLOT
.ENDR

	BORDER $55

	JSR MOVE_PLR
	JSR CALC_LANDSCAPE_CHAR_PIXEL_NOTAB
	JSR DRW_LANDSCAPE

;		LDA #%11111111
;		LDX #30
;		LDY #0
;		JSR LINE_TEST


;			JSR	MOVE_SPRITES ; move objects to this draw list
		ldx TH
		ldy TV
		lda	#0
		stx TMPH
		sty TMPV
		sta TMPT
		
;		BORDER $44

;			JSR	DRAW_SPRITES ; draw this list 

			BORDER 0

INTREGA	LDA #0
INTREGX	LDX #0
INTREGY	LDY #0
;			PLP
		RTI
.ENDL

.LOCAL	DRAW_SPRITE
			LDX SPRITE_AND_LO_LO,Y
			STX SCR0
			LDX SPRITE_AND_LO_HI,Y
			STX SCR0 +1
			LDX SPRITE_AND_HI_LO,Y
			STX SCR1
			LDX SPRITE_AND_HI_HI,Y
			STX SCR1 +1
  
			LDX SPRITE_ORA_LO_LO,Y
			STX SCR2
			LDX SPRITE_ORA_LO_HI,Y
			STX SCR2 +1
			LDX SPRITE_ORA_HI_LO,Y
			STX SCR3
			LDX SPRITE_ORA_HI_HI,Y
			STX SCR3 +1

			LDX SPRITE_TYPE,Y
			STX SPRN_TMPB+1

			AND #3
			TAY

			LDA (SCR2),Y
            STA SPR_ORA
			LDA (SCR3),Y
            STA SPR_ORA +1
			LAX (SCR0),Y
			LDA (SCR1),Y
   
SPRN_TMPB	JMP (SPRITE_DRW_JMP_LIST)
.ENDL

.LOCAL	CLEAR_SPRITE
  			LDX SPRITE_TYPE,Y
 			STX SPRN_TMPB+1
			TAY
SPRN_TMPB	JMP (SPRITE_CLR_JMP_LIST)
.ENDL

.LOCAL	DRAW_01
		LDA	SC_LO,Y
		STA	SCR0
SCPTD1	LDA	SC0_HI,Y 
		STA	SCR0+1 
		LDY	SCR_HOR,X
		LDA	(SCR0),Y
		ORA	SCR_OR,X
		STA	(SCR0),Y 
		RTS
.ENDL

.LOCAL	CLEAR_01
		LDA	SC_LO,Y
		STA	SCR0
SCPTC1	LDA	SC0_HI,Y 
		STA	SCR0+1 
		LDY	SCR_HOR,X
		LDA	#0
		STA	(SCR0),Y 
		RTS
.ENDL

.MACRO	INCXY
			INX
			BNE CONT
				INY
CONT
.ENDM

.MACRO	ADDAX
			ADC #32
			BCC	CONT
				INX
				CLC
CONT
.ENDM

.MACRO	ADDAX_NOC
			ADC #32
			BCC	CONT
				INX
;				CLC not needed
CONT
.ENDM

.MACRO	ADDAY
			ADC #32
			BCC	CONT
				INY
				CLC
CONT
.ENDM

.MACRO	ADDAY_NOC
			ADC #32
			BCC	CONT
				INY
;				CLC not needed
CONT
.ENDM

.LOCAL	DRAW_08
			STX SPA01 +1
			STA SPA01 +2
			INX
			STX SPA02 +1
			STA SPA02 +2
			INX 
			STX SPA03 +1
			STA SPA03 +2
			INX 
			STX SPA04 +1
			STA SPA04 +2
			INX 
			STX SPA05 +1
			STA SPA05 +2
			INX 
			STX SPA06 +1
			STA SPA06 +2
			INX 
			STX SPA07 +1
			STA SPA07 +2
			INX 
			STX SPA08 +1
			STA SPA08 +2

			LDX SPR_ORA
			LDA SPR_ORA +1
			STX SPO01 +1
			STA SPO01 +2
			INX 
			STX SPO02 +1
			STA SPO02 +2
			INX 
			STX SPO03 +1
			STA SPO03 +2
			INX 
			STX SPO04 +1
			STA SPO04 +2
			INX 
			STX SPO05 +1
			STA SPO05 +2
			INX 
			STX SPO06 +1
			STA SPO06 +2
			INX 
			STX SPO07 +1
			STA SPO07 +2
			INX 
			STX SPO08 +1
			STA SPO08 +2
 
			LAX REGY ; V
SCPTD8		LDY SC0_HI +0,X
			STY SCR0 +1
			
			LSR
			BCS	ODD_12221

EVEN_2222:	LDA SC_LO +0,X
			STA SCR0

			CLC			
			ADC	#32
			STY SCR1 +1
			STA SCR1

			ADDAY
			STY SCR2 +1
			STA SCR2
			ADC	#32
			STY SCR3 +1
			STA SCR3

			ADDAY
			STY SCR4 +1
			STA SCR4
			ADC	#32
			STY SCR5 +1
			STA SCR5
			
			ADDAY
			STY SCR6 +1
			STA SCR6
			ADC	#32
			STY SCR7 +1
			STA SCR7

			BVC	CONT ; JMP

ODD_12221:	LDA SC_LO +0,X
			STA SCR0

			CLC			
			ADDAY
			STY SCR1 +1
			STA SCR1

			ADC	#32
			STY SCR2 +1
			STA SCR2
			ADDAY
			STY SCR3 +1
			STA SCR3

			ADC	#32
			STY SCR4 +1
			STA SCR4

			ADDAY
			STY SCR5 +1
			STA SCR5
			
			ADC	#32
			STY SCR6 +1
			STA SCR6

			ADDAY_NOC
			STY SCR7 +1
			STA SCR7
			
CONT:		LDX REGX
			LDY SCR_HOR,X
			
			LDA	SPR08_DRW_CNT,X
			TAX
			
LOOP
				LDA	(SCR7),Y
SPA08 			AND $ABCD,X
SPO08 			ORA $ABCD,X
				STA	(SCR7),Y

				LDA	(SCR6),Y
SPA07 			AND $ABCD,X
SPO07 			ORA $ABCD,X
				STA	(SCR6),Y

				LDA	(SCR5),Y
SPA06 			AND $ABCD,X
SPO06 			ORA $ABCD,X
				STA	(SCR5),Y

				LDA	(SCR4),Y
SPA05 			AND $ABCD,X
SPO05 			ORA $ABCD,X
				STA	(SCR4),Y

				LDA	(SCR3),Y
SPA04 			AND $ABCD,X
SPO04 			ORA $ABCD,X
				STA	(SCR3),Y

				LDA	(SCR2),Y
SPA03 			AND $ABCD,X
SPO03 			ORA $ABCD,X
				STA	(SCR2),Y

				LDA	(SCR1),Y
SPA02 			AND $ABCD,X
SPO02 			ORA $ABCD,X
				STA	(SCR1),Y

				LDA	(SCR0),Y
SPA01 			AND $ABCD,X
SPO01 			ORA $ABCD,X
				STA	(SCR0),Y

				INY
				
				LDA #$FF
				SBX #8 ; = x=x-8 ; #$fc ;equivalent to +4
;				TXA
;				SBC #8		; carry set
;				TAX

			BNE LOOP
		RTS
.ENDL

.LOCAL	CLEAR_08
SCPTC8		LDX SC0_HI +0,Y
			STX SCR0 +1

			LSR
			BCS	ODD_12221

EVEN_2222:	LDA SC_LO +0,Y
			STA SCR0
			CLC			
			ADC	#32
			STX SCR1 +1
			STA SCR1

			ADDAX
			STX SCR2 +1
			STA SCR2
			ADC	#32
			STX SCR3 +1
			STA SCR3

			ADDAX
			STX SCR4 +1
			STA SCR4
			ADC	#32
			STX SCR5 +1
			STA SCR5
			
			ADDAX
			STX SCR6 +1
			STA SCR6
			ADC	#32
			STX SCR7 +1
			STA SCR7

			BVC	CONT ; JMP

ODD_12221:	LDA SC_LO +0,Y
			STA SCR0

			CLC			
			ADDAX
			STX SCR1 +1
			STA SCR1

			ADC	#32
			STX SCR2 +1
			STA SCR2
			ADDAX
			STX SCR3 +1
			STA SCR3

			ADC	#32
			STX SCR4 +1
			STA SCR4

			ADDAX
			STX SCR5 +1
			STA SCR5
			
			ADC	#32
			STX SCR6 +1
			STA SCR6

			ADDAX_NOC
			STX SCR7 +1
			STA SCR7
			
CONT:		LDX REGX
			LDY SCR_HOR,X
			LDA	SPR08_CLR_CNT,X
			TAX

			LDA	#0
LOOP			STA	(SCR0),Y
				STA	(SCR1),Y
				STA	(SCR2),Y
				STA	(SCR3),Y
				STA	(SCR4),Y
				STA	(SCR5),Y
				STA	(SCR6),Y
				STA	(SCR7),Y
				INY
				DEX
			BNE LOOP
		RTS
.ENDL

;.LOCAL	V_WAIT
;			LDA	#111
;LOOP			CMP	VCOUNT  ; will be equal until incremented in VB
;				BNE	LOOP
;			RTS
;.ENDL

;.LOCAL	JOYSTICK
;			LDA PORTA
;			LSR
;			BCS   UP
;				DEC   TV
;UP       	LSR
;			BCS   DOWN
;				INC   TV
;DOWN     	LSR
;			BCS   LEFT
;				DEC   TH
;LEFT     	LSR
;			BCS   RIGHT
;				INC   TH
;RIGHT    	AND   #1
;			STA   FIRE
;			RTS
;.ENDL

JOYSTICK1 LDA $DC01     ; PORT 1
          JMP JOYSTICK
JOYSTICK2 LDA PORTA
.LOCAL	JOYSTICK
		LDX #0
		LDY #0
UP     	LSR
		BCS	DOWN
			DEY
DOWN  	LSR
		BCS	LEFT
			INY
LEFT  	LSR
		BCS	RIGHT
			DEX
RIGHT  	LSR
		BCS	FIRE
			INX
FIRE  	EOR   #255
		AND   #1
		STA   JOYF
		STX   JOYH
		STY   JOYV
		LSR
		RTS
.ENDL

.LOCAL	MOVE_PLR
		JSR JOYSTICK2 ; x and y already contain x and y joy pos?
		TYA
		CLC
		ADC   VPOS
		STA   VPOS  ; vertical

		TXA
		BEQ   EXIT
		BMI   RIGHT

LEFT  	STA   LFT +1
		LDA   HPOS
		CLC
LFT    	ADC   #0 
		STA   HPOS
		TAX
		LDA   HPOS +1
		ADC   #0
		AND   #3
		STA   HPOS +1
		TAY
		RTS

RIGHT  	EOR   #$FF
		CLC
		ADC   #1    ; carry is clear
		STA	RGT +1
		SEC
		LDA   HPOS
RGT   	SBC   #0 
		STA   HPOS
		TAX
		LDA   HPOS +1
		SBC   #0
		AND   #3
		STA   HPOS +1
		TAY
		RTS

EXIT  	LDX HPOS
		LDY HPOS +1
		RTS
.ENDL

.LOCAL	CALC_LANDSCAPE_CHAR_PIXEL_NOTAB ; convert 0-1023 to 0-3 pixel pos + 0-255 map pos
		TXA
		AND #%00000011
		STA MAP_PIXEL

		STY MAP_LFT_ADDR
		TAY
		TXA

		LDX MAP_SCL_LFT_MSB,Y
		STX MAP_LFT_ADDR +1
		LDX MAP_SCL_RGT_MSB,Y
		STX MAP_RGT_ADDR +1

		LDX MAP_SCL_LFT_VAL,Y
		STX DRW_LANDSCAPE.LFT_PLT +1
		LDX MAP_SCL_RGT_VAL,Y
		STX DRW_LANDSCAPE.RGT_PLT +1

		LSR MAP_LFT_ADDR
		ROR
		LSR MAP_LFT_ADDR
		ROR

		TAX
		CLC
		ADC MAP_SCL_LFT_ADD,Y
		STA MAP_LFT_ADDR
		TXA
		CLC
		ADC MAP_SCL_RGT_ADD,Y
		STA MAP_RGT_ADDR

		RTS
.ENDL

;.LOCAL	CALC_LANDSCAPE_CHAR_PIXEL_NOTAB_2 ; convert 0-1023 to 0-3 pixel pos + 0-255 map pos
;		TXA
;		AND #%00000011
;		STA MAP_PIXEL
;
;		STX MAP_LFT_ADDR
; TAX
; TYA
;
; LDY MAP_SCL_LFT_MSB,X
; STY MAP_LFT_ADDR +1
; LDY MAP_SCL_RGT_MSB,X
; STY MAP_RGT_ADDR +1
;
; LDY MAP_SCL_LFT_VAL,X
; STY DRW_LANDSCAPE.LFT_PLT +1
; LDY MAP_SCL_RGT_VAL,X
; STY DRW_LANDSCAPE.RGT_PLT +1
;
;		LSR
;		ROR MAP_LFT_ADDR
;		LSR
;		ROR MAP_LFT_ADDR
;		LDA	MAP_LFT_ADDR
;		TAY
;		CLC
;		ADC MAP_SCL_LFT_ADD,X
;		STA MAP_LFT_ADDR
;		TYA
;		CLC
;		ADC MAP_SCL_RGT_ADD,X
;		STA MAP_RGT_ADDR
;		RTS
;.ENDL

;.LOCAL	CALC_LANDSCAPE_CHAR_PIXEL ; convert 0-1023 to 0-3 pixel pos + 0-255 map pos
;		LDA HORSCROLLTAB,X
;		STA MAP_PIXEL
;		LDA MAPTABHI,Y ; (high ??????xx multiplied by 64 to xx??????)
;		ORA MAPTABLO,X ; (low xxxxxx?? divided by 4 to ??xxxxxx) 
;		STA MAP_LFT_LSB_ADDR
;		STA MAP_LFT_MSB_ADDR
;		STA MAP_RGT_LSB_ADDR
;		STA MAP_RGT_MSB_ADDR
;		RTS
;.ENDL

.LOCAL	MEMSET
			STY	LSB_ONLY+1 ; store LSB count
			CPX	#0          ; MSB?     
            BEQ	LSB_ONLY   ; no

            LDY	#0          ; yes so reset LSB
MSB_LOOP  
LSB_LOOP    		STA	(SCR0),Y   ; clear whole MSB
					DEY 
					BNE	LSB_LOOP

				INC	SCR0+1      ; inc MSB
				DEX               ; dec MSB count
				BNE	MSB_LOOP

LSB_ONLY    LDY	#0          ; LSB count 
            BEQ	MS_END     ; not needed

LAST_LSB_LOOP 	STA	(SCR0),Y
				DEY 
				BNE	LAST_LSB_LOOP
                
            STA	(SCR0),Y     ; clear last Y (0)
MS_END      RTS
.ENDL

; 1
; 1		2
; 5		7
; 1		8
; 1		9
; 20	29
; 1		30
; 160	190
; 1		1

.LOCAL	HEX16	; X = HOR / A = HI / Y = LO
		PHA
		TYA
		JSR	HEX8
		PLA
		INX
;		JSR HEX8
;		RTS
.ENDL

.LOCAL	HEX8 ; A = NUM / X = HOR
		PHA
		LSR	
		LSR	
		LSR	
		LSR	
		TAY
		JSR   HEXCHAR
	
		PLA
		AND   #15
		TAY
		INX	
;		JSR   HEXCHAR
;		RTS
.ENDL

.LOCAL	HEXCHAR	
		LDA	HEX0,Y
		STA	TXT_SCR_ADR,X
		LDA	HEX1,Y
		STA	TXT_SCR_ADR+(40*1),X
		LDA	HEX2,Y
		STA	TXT_SCR_ADR+(40*2),X
		LDA	HEX3,Y
		STA	TXT_SCR_ADR+(40*3),X
		LDA	HEX4,Y
		STA	TXT_SCR_ADR+(40*4),X
		RTS
.ENDL

.ALIGN $100
.LOCAL	DRW_SPRITE_24X06
			LDA	DRW_SPR_JMP_TAB,Y
			STA	DRW_SPR_JMP +1
DRW_SPR_JMP	JMP	DRW_SPR_0
.ENDL

.LOCAL	DRW_SPR_0	; 00 TO 06
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_0
		STA	SCR0
		LDA	#SPR_LINE_1
		STA	SCR1
		LDA	#SPR_LINE_2
		STA	SCR2
		LDA	#SPR_LINE_3
		STA	SCR3
		LDA	#SPR_LINE_4
		STA	SCR4
		LDA	#SPR_LINE_5
		STA	SCR5
		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_1	; 01 TO 07
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		LDA	SC0_HI+5,Y
		STA	SCR5+1
		LDA	#SPR_LINE_1
		STA	SCR0
		LDA	#SPR_LINE_2
		STA	SCR1
		LDA	#SPR_LINE_3
		STA	SCR2
		LDA	#SPR_LINE_4
		STA	SCR3
		LDA	#SPR_LINE_5
		STA	SCR4
		LDA	#SPR_LINE_0
		STA	SCR5
		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_2	; 02 TO 08
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		LDA	SC0_HI+5,Y
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_2
		STA	SCR0
		LDA	#SPR_LINE_3
		STA	SCR1
		LDA	#SPR_LINE_4
		STA	SCR2
		LDA	#SPR_LINE_5
		STA	SCR3
		LDA	#SPR_LINE_0
		STA	SCR4
		LDA	#SPR_LINE_1
		STA	SCR5
		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_3	; 03 TO 09
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		LDA	SC0_HI+5,Y
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_3
		STA	SCR0
		LDA	#SPR_LINE_4
		STA	SCR1
		LDA	#SPR_LINE_5
		STA	SCR2
		LDA	#SPR_LINE_0
		STA	SCR3
		LDA	#SPR_LINE_1
		STA	SCR4
		LDA	#SPR_LINE_2
		STA	SCR5
		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_4	; 04 TO 10
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		LDA	SC0_HI+5,Y
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_4
		STA	SCR0
		LDA	#SPR_LINE_5
		STA	SCR1
		LDA	#SPR_LINE_0
		STA	SCR2
		LDA	#SPR_LINE_1
		STA	SCR3
		LDA	#SPR_LINE_2
		STA	SCR4
		LDA	#SPR_LINE_3
		STA	SCR5
		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_5	; 05 TO 11
		LDA	SC0_HI,Y
		STA	SCR0+1
		LDA	SC0_HI+5,Y
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_5
		STA	SCR0
		LDA	#SPR_LINE_0
		STA	SCR1
		LDA	#SPR_LINE_1
		STA	SCR2
		LDA	#SPR_LINE_2
		STA	SCR3
		LDA	#SPR_LINE_3
		STA	SCR4
		LDA	#SPR_LINE_4
		STA	SCR5
;		JMP	DRW_SPR_CONT
.ENDL

.LOCAL	DRW_SPR_CONT

		LDY	SCR_HOR,X

		LDA #%11111111
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		LDA #%10101010
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		LDA #%01010101
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y

		RTS
.ENDL

.ALIGN $100
.LOCAL	CLR_SPRITE_24X06
			LDA	CLR_SPR_JMP_TAB,Y
			STA	CLR_SPR_JMP +1
CLR_SPR_JMP	JMP	CLR_SPR_0
.ENDL

.LOCAL	CLR_SPR_0	; 00 TO 06
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_0
		STA	SCR0
		LDA	#SPR_LINE_1
		STA	SCR1
		LDA	#SPR_LINE_2
		STA	SCR2
		LDA	#SPR_LINE_3
		STA	SCR3
		LDA	#SPR_LINE_4
		STA	SCR4
		LDA	#SPR_LINE_5
		STA	SCR5
		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_1	; 01 TO 07
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		LDA	SC0_HI+5,Y
		STA	SCR5+1
		LDA	#SPR_LINE_1
		STA	SCR0
		LDA	#SPR_LINE_2
		STA	SCR1
		LDA	#SPR_LINE_3
		STA	SCR2
		LDA	#SPR_LINE_4
		STA	SCR3
		LDA	#SPR_LINE_5
		STA	SCR4
		LDA	#SPR_LINE_0
		STA	SCR5
		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_2	; 02 TO 08
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		LDA	SC0_HI+5,Y
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_2
		STA	SCR0
		LDA	#SPR_LINE_3
		STA	SCR1
		LDA	#SPR_LINE_4
		STA	SCR2
		LDA	#SPR_LINE_5
		STA	SCR3
		LDA	#SPR_LINE_0
		STA	SCR4
		LDA	#SPR_LINE_1
		STA	SCR5
		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_3	; 03 TO 09
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		STA	SCR2+1
		LDA	SC0_HI+5,Y
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_3
		STA	SCR0
		LDA	#SPR_LINE_4
		STA	SCR1
		LDA	#SPR_LINE_5
		STA	SCR2
		LDA	#SPR_LINE_0
		STA	SCR3
		LDA	#SPR_LINE_1
		STA	SCR4
		LDA	#SPR_LINE_2
		STA	SCR5
		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_4	; 04 TO 10
		LDA	SC0_HI,Y
		STA	SCR0+1
		STA	SCR1+1
		LDA	SC0_HI+5,Y
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_4
		STA	SCR0
		LDA	#SPR_LINE_5
		STA	SCR1
		LDA	#SPR_LINE_0
		STA	SCR2
		LDA	#SPR_LINE_1
		STA	SCR3
		LDA	#SPR_LINE_2
		STA	SCR4
		LDA	#SPR_LINE_3
		STA	SCR5
		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_5	; 05 TO 11
		LDA	SC0_HI,Y
		STA	SCR0+1
		LDA	SC0_HI+5,Y
		STA	SCR1+1
		STA	SCR2+1
		STA	SCR3+1
		STA	SCR4+1
		STA	SCR5+1
		LDA	#SPR_LINE_5
		STA	SCR0
		LDA	#SPR_LINE_0
		STA	SCR1
		LDA	#SPR_LINE_1
		STA	SCR2
		LDA	#SPR_LINE_2
		STA	SCR3
		LDA	#SPR_LINE_3
		STA	SCR4
		LDA	#SPR_LINE_4
		STA	SCR5
;		JMP	CLR_SPR_CONT
.ENDL

.LOCAL	CLR_SPR_CONT

		LDY	SCR_HOR,X

		LDA #0
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y
	INY
		STA	(SCR0),Y
		STA	(SCR1),Y
		STA	(SCR2),Y
		STA	(SCR3),Y
		STA	(SCR4),Y
		STA	(SCR5),Y

		RTS
.ENDL


;0= keep left and right map tables / set left as 11000000 / set right as 00001100
; leftv space (11000000) 					0 LEFT
;       rightv space (00001100)				0 RIGHT
;             leftv space (11000000)		1 LEFT
;                   rightv space (00001100)	1 RIGHT

;1= swap left and right map tables / set left as 00110000 / set right as 00000011
; space rightv (00110000)					0 RIGHT
;       space leftv (00000011)				1 LEFT
;             space rightv (00110000)		1 RIGHT
;                   space leftv (00000011)	2 LEFT

;2= swap left and right map tables / set left as 11000000 / set right as 00001100
; rightv space (11000000)					0 RIGHT
;       leftv space (00001100)				1 LEFT
;             rightv space (11000000)		1 RIGHT
;                   leftv space (00001100)	2 LEFT

;3= keep left and right map tables / set left as 00110000 / set right as 00000011
; space leftv (00110000)					1 LEFT
;       space rightv (00000011)				1 RIGHT
;             space leftv (00110000)		LEFT
;                   space rightv (00000011)	RIGHT

MAP_SCL_LFT_MSB .BYTE >MAP_LFT,>MAP_RGT,>MAP_RGT,>MAP_LFT
MAP_SCL_RGT_MSB .BYTE >MAP_RGT,>MAP_LFT,>MAP_LFT,>MAP_RGT
MAP_SCL_LFT_VAL .BYTE %11000000,%00110000,%11000000,%00110000
MAP_SCL_RGT_VAL .BYTE %00001100,%00000011,%00001100,%00000011
MAP_SCL_LFT_ADD .BYTE 0,0,0,1 ; 0,1,1,1
MAP_SCL_RGT_ADD .BYTE 0,1,1,1 ; 0,0,0,1

HEX0  .BYTE %11000001,%11110011,%10000001,%10000001,%10011100,%10000000,%11000000,%10000000,%11000001,%11000001,%11000001,%10000001,%11000001,%10000001,%11000000,%11000000 
HEX1  .BYTE %10011100,%11100011,%11111100,%11111100,%10011100,%10011111,%10011111,%11111001,%10011100,%10011100,%10011100,%10011100,%10011100,%10011100,%10011111,%10011111 
HEX2  .BYTE %10011100,%11110011,%11000001,%10000001,%11000000,%11000001,%11000001,%11110011,%11000001,%11000001,%10000000,%10000001,%10011111,%10011100,%11000000,%11000000
HEX3  .BYTE %10011100,%11110011,%10011111,%11111100,%11111100,%11111100,%10011100,%11100111,%10011100,%11111100,%10011100,%10011100,%10011100,%10011100,%10011111,%10011111
HEX4  .BYTE %11000001,%10000000,%10000000,%10000001,%11111100,%10000001,%11000001,%11001111,%11000001,%11000001,%10011100,%10000001,%11000001,%10000001,%11000000,%10011111

DRW_SPR_JMP_TAB
.REPT 27
	.BYTE <DRW_SPR_0,<DRW_SPR_1,<DRW_SPR_2,<DRW_SPR_3,<DRW_SPR_4,<DRW_SPR_5
.ENDR

CLR_SPR_JMP_TAB
.REPT 27
	.BYTE <CLR_SPR_0,<CLR_SPR_1,<CLR_SPR_2,<CLR_SPR_3,<CLR_SPR_4,<CLR_SPR_5
.ENDR

	.ALIGN $100
SC0_HI	
	.BYTE >SCN0_LINE000,>SCN0_LINE001,>SCN0_LINE002,>SCN0_LINE003,>SCN0_LINE004,>SCN0_LINE005,>SCN0_LINE006,>SCN0_LINE007,>SCN0_LINE008,>SCN0_LINE009
	.BYTE >SCN0_LINE010,>SCN0_LINE011,>SCN0_LINE012,>SCN0_LINE013,>SCN0_LINE014,>SCN0_LINE015,>SCN0_LINE016,>SCN0_LINE017,>SCN0_LINE018,>SCN0_LINE019
	.BYTE >SCN0_LINE020,>SCN0_LINE021,>SCN0_LINE022,>SCN0_LINE023,>SCN0_LINE024,>SCN0_LINE025,>SCN0_LINE026,>SCN0_LINE027,>SCN0_LINE028,>SCN0_LINE029
	.BYTE >SCN0_LINE030,>SCN0_LINE031,>SCN0_LINE032,>SCN0_LINE033,>SCN0_LINE034,>SCN0_LINE035,>SCN0_LINE036,>SCN0_LINE037,>SCN0_LINE038,>SCN0_LINE039
	.BYTE >SCN0_LINE040,>SCN0_LINE041,>SCN0_LINE042,>SCN0_LINE043,>SCN0_LINE044,>SCN0_LINE045,>SCN0_LINE046,>SCN0_LINE047,>SCN0_LINE048,>SCN0_LINE049
	.BYTE >SCN0_LINE050,>SCN0_LINE051,>SCN0_LINE052,>SCN0_LINE053,>SCN0_LINE054,>SCN0_LINE055,>SCN0_LINE056,>SCN0_LINE057,>SCN0_LINE058,>SCN0_LINE059
	.BYTE >SCN0_LINE060,>SCN0_LINE061,>SCN0_LINE062,>SCN0_LINE063,>SCN0_LINE064,>SCN0_LINE065,>SCN0_LINE066,>SCN0_LINE067,>SCN0_LINE068,>SCN0_LINE069
	.BYTE >SCN0_LINE070,>SCN0_LINE071,>SCN0_LINE072,>SCN0_LINE073,>SCN0_LINE074,>SCN0_LINE075,>SCN0_LINE076,>SCN0_LINE077,>SCN0_LINE078,>SCN0_LINE079
	.BYTE >SCN0_LINE080,>SCN0_LINE081,>SCN0_LINE082,>SCN0_LINE083,>SCN0_LINE084,>SCN0_LINE085,>SCN0_LINE086,>SCN0_LINE087,>SCN0_LINE088,>SCN0_LINE089
	.BYTE >SCN0_LINE090,>SCN0_LINE091,>SCN0_LINE092,>SCN0_LINE093,>SCN0_LINE094,>SCN0_LINE095,>SCN0_LINE096,>SCN0_LINE097,>SCN0_LINE098,>SCN0_LINE099
	.BYTE >SCN0_LINE100,>SCN0_LINE101,>SCN0_LINE102,>SCN0_LINE103,>SCN0_LINE104,>SCN0_LINE105,>SCN0_LINE106,>SCN0_LINE107,>SCN0_LINE108,>SCN0_LINE109
	.BYTE >SCN0_LINE110,>SCN0_LINE111,>SCN0_LINE112,>SCN0_LINE113,>SCN0_LINE114,>SCN0_LINE115,>SCN0_LINE116,>SCN0_LINE117,>SCN0_LINE118,>SCN0_LINE119
	.BYTE >SCN0_LINE120,>SCN0_LINE121,>SCN0_LINE122,>SCN0_LINE123,>SCN0_LINE124,>SCN0_LINE125,>SCN0_LINE126,>SCN0_LINE127,>SCN0_LINE128,>SCN0_LINE129
	.BYTE >SCN0_LINE130,>SCN0_LINE131,>SCN0_LINE132,>SCN0_LINE133,>SCN0_LINE134,>SCN0_LINE135,>SCN0_LINE136,>SCN0_LINE137,>SCN0_LINE138,>SCN0_LINE139
	.BYTE >SCN0_LINE140,>SCN0_LINE141,>SCN0_LINE142,>SCN0_LINE143,>SCN0_LINE144,>SCN0_LINE145,>SCN0_LINE146,>SCN0_LINE147,>SCN0_LINE148,>SCN0_LINE149
	.BYTE >SCN0_LINE150,>SCN0_LINE151,>SCN0_LINE152,>SCN0_LINE153,>SCN0_LINE154,>SCN0_LINE155,>SCN0_LINE156,>SCN0_LINE157,>SCN0_LINE158,>SCN0_LINE159

	.ALIGN $100
SC1_HI	
	.BYTE >SCN0_LINE000,>SCN0_LINE001,>SCN0_LINE002,>SCN0_LINE003,>SCN0_LINE004,>SCN0_LINE005,>SCN0_LINE006,>SCN0_LINE007,>SCN0_LINE008,>SCN0_LINE009
	.BYTE >SCN0_LINE010,>SCN0_LINE011,>SCN0_LINE012,>SCN0_LINE013,>SCN0_LINE014,>SCN0_LINE015,>SCN0_LINE016,>SCN0_LINE017,>SCN0_LINE018,>SCN0_LINE019
	.BYTE >SCN0_LINE020,>SCN0_LINE021,>SCN0_LINE022,>SCN0_LINE023,>SCN0_LINE024,>SCN0_LINE025,>SCN0_LINE026,>SCN0_LINE027,>SCN0_LINE028,>SCN0_LINE029
	.BYTE >SCN0_LINE030,>SCN0_LINE031,>SCN0_LINE032,>SCN0_LINE033,>SCN0_LINE034,>SCN0_LINE035,>SCN0_LINE036,>SCN0_LINE037,>SCN0_LINE038,>SCN0_LINE039
	.BYTE >SCN0_LINE040,>SCN0_LINE041,>SCN0_LINE042,>SCN0_LINE043,>SCN0_LINE044,>SCN0_LINE045,>SCN0_LINE046,>SCN0_LINE047,>SCN0_LINE048,>SCN0_LINE049
	.BYTE >SCN0_LINE050,>SCN0_LINE051,>SCN0_LINE052,>SCN0_LINE053,>SCN0_LINE054,>SCN0_LINE055,>SCN0_LINE056,>SCN0_LINE057,>SCN0_LINE058,>SCN0_LINE059
	.BYTE >SCN0_LINE060,>SCN0_LINE061,>SCN0_LINE062,>SCN0_LINE063,>SCN0_LINE064,>SCN0_LINE065,>SCN0_LINE066,>SCN0_LINE067,>SCN0_LINE068,>SCN0_LINE069
	.BYTE >SCN0_LINE070,>SCN0_LINE071,>SCN0_LINE072,>SCN0_LINE073,>SCN0_LINE074,>SCN0_LINE075,>SCN0_LINE076,>SCN0_LINE077,>SCN0_LINE078,>SCN0_LINE079
	.BYTE >SCN0_LINE080,>SCN0_LINE081,>SCN0_LINE082,>SCN0_LINE083,>SCN0_LINE084,>SCN0_LINE085,>SCN0_LINE086,>SCN0_LINE087,>SCN0_LINE088,>SCN0_LINE089
	.BYTE >SCN0_LINE090,>SCN0_LINE091,>SCN0_LINE092,>SCN0_LINE093,>SCN0_LINE094,>SCN0_LINE095,>SCN0_LINE096,>SCN0_LINE097,>SCN0_LINE098,>SCN0_LINE099
	.BYTE >SCN0_LINE100,>SCN0_LINE101,>SCN0_LINE102,>SCN0_LINE103,>SCN0_LINE104,>SCN0_LINE105,>SCN0_LINE106,>SCN0_LINE107,>SCN0_LINE108,>SCN0_LINE109
	.BYTE >SCN0_LINE110,>SCN0_LINE111,>SCN0_LINE112,>SCN0_LINE113,>SCN0_LINE114,>SCN0_LINE115,>SCN0_LINE116,>SCN0_LINE117,>SCN0_LINE118,>SCN0_LINE119
	.BYTE >SCN0_LINE120,>SCN0_LINE121,>SCN0_LINE122,>SCN0_LINE123,>SCN0_LINE124,>SCN0_LINE125,>SCN0_LINE126,>SCN0_LINE127,>SCN0_LINE128,>SCN0_LINE129
	.BYTE >SCN0_LINE130,>SCN0_LINE131,>SCN0_LINE132,>SCN0_LINE133,>SCN0_LINE134,>SCN0_LINE135,>SCN0_LINE136,>SCN0_LINE137,>SCN0_LINE138,>SCN0_LINE139
	.BYTE >SCN0_LINE140,>SCN0_LINE141,>SCN0_LINE142,>SCN0_LINE143,>SCN0_LINE144,>SCN0_LINE145,>SCN0_LINE146,>SCN0_LINE147,>SCN0_LINE148,>SCN0_LINE149
	.BYTE >SCN0_LINE150,>SCN0_LINE151,>SCN0_LINE152,>SCN0_LINE153,>SCN0_LINE154,>SCN0_LINE155,>SCN0_LINE156,>SCN0_LINE157,>SCN0_LINE158,>SCN0_LINE159

	.ALIGN $100
SC_LO
	.BYTE <SCN0_LINE000,<SCN0_LINE001,<SCN0_LINE002,<SCN0_LINE003,<SCN0_LINE004,<SCN0_LINE005,<SCN0_LINE006,<SCN0_LINE007,<SCN0_LINE008,<SCN0_LINE009
	.BYTE <SCN0_LINE010,<SCN0_LINE011,<SCN0_LINE012,<SCN0_LINE013,<SCN0_LINE014,<SCN0_LINE015,<SCN0_LINE016,<SCN0_LINE017,<SCN0_LINE018,<SCN0_LINE019
	.BYTE <SCN0_LINE020,<SCN0_LINE021,<SCN0_LINE022,<SCN0_LINE023,<SCN0_LINE024,<SCN0_LINE025,<SCN0_LINE026,<SCN0_LINE027,<SCN0_LINE028,<SCN0_LINE029
	.BYTE <SCN0_LINE030,<SCN0_LINE031,<SCN0_LINE032,<SCN0_LINE033,<SCN0_LINE034,<SCN0_LINE035,<SCN0_LINE036,<SCN0_LINE037,<SCN0_LINE038,<SCN0_LINE039
	.BYTE <SCN0_LINE040,<SCN0_LINE041,<SCN0_LINE042,<SCN0_LINE043,<SCN0_LINE044,<SCN0_LINE045,<SCN0_LINE046,<SCN0_LINE047,<SCN0_LINE048,<SCN0_LINE049
	.BYTE <SCN0_LINE050,<SCN0_LINE051,<SCN0_LINE052,<SCN0_LINE053,<SCN0_LINE054,<SCN0_LINE055,<SCN0_LINE056,<SCN0_LINE057,<SCN0_LINE058,<SCN0_LINE059
	.BYTE <SCN0_LINE060,<SCN0_LINE061,<SCN0_LINE062,<SCN0_LINE063,<SCN0_LINE064,<SCN0_LINE065,<SCN0_LINE066,<SCN0_LINE067,<SCN0_LINE068,<SCN0_LINE069
	.BYTE <SCN0_LINE070,<SCN0_LINE071,<SCN0_LINE072,<SCN0_LINE073,<SCN0_LINE074,<SCN0_LINE075,<SCN0_LINE076,<SCN0_LINE077,<SCN0_LINE078,<SCN0_LINE079
	.BYTE <SCN0_LINE080,<SCN0_LINE081,<SCN0_LINE082,<SCN0_LINE083,<SCN0_LINE084,<SCN0_LINE085,<SCN0_LINE086,<SCN0_LINE087,<SCN0_LINE088,<SCN0_LINE089
	.BYTE <SCN0_LINE090,<SCN0_LINE091,<SCN0_LINE092,<SCN0_LINE093,<SCN0_LINE094,<SCN0_LINE095,<SCN0_LINE096,<SCN0_LINE097,<SCN0_LINE098,<SCN0_LINE099
	.BYTE <SCN0_LINE100,<SCN0_LINE101,<SCN0_LINE102,<SCN0_LINE103,<SCN0_LINE104,<SCN0_LINE105,<SCN0_LINE106,<SCN0_LINE107,<SCN0_LINE108,<SCN0_LINE109
	.BYTE <SCN0_LINE110,<SCN0_LINE111,<SCN0_LINE112,<SCN0_LINE113,<SCN0_LINE114,<SCN0_LINE115,<SCN0_LINE116,<SCN0_LINE117,<SCN0_LINE118,<SCN0_LINE119
	.BYTE <SCN0_LINE120,<SCN0_LINE121,<SCN0_LINE122,<SCN0_LINE123,<SCN0_LINE124,<SCN0_LINE125,<SCN0_LINE126,<SCN0_LINE127,<SCN0_LINE128,<SCN0_LINE129
	.BYTE <SCN0_LINE130,<SCN0_LINE131,<SCN0_LINE132,<SCN0_LINE133,<SCN0_LINE134,<SCN0_LINE135,<SCN0_LINE136,<SCN0_LINE137,<SCN0_LINE138,<SCN0_LINE139
	.BYTE <SCN0_LINE140,<SCN0_LINE141,<SCN0_LINE142,<SCN0_LINE143,<SCN0_LINE144,<SCN0_LINE145,<SCN0_LINE146,<SCN0_LINE147,<SCN0_LINE148,<SCN0_LINE149
	.BYTE <SCN0_LINE150,<SCN0_LINE151,<SCN0_LINE152,<SCN0_LINE153,<SCN0_LINE154,<SCN0_LINE155,<SCN0_LINE156,<SCN0_LINE157,<SCN0_LINE158,<SCN0_LINE159

	.ALIGN $100
SCR_HOR
 .BYTE 00,00,00,00,01,01,01,01,02,02,02,02,03,03,03,03,04,04,04,04,05,05,05,05,06,06,06,06,07,07,07,07
 .BYTE 08,08,08,08,09,09,09,09,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15
 .BYTE 16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23
 .BYTE 24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31
 .BYTE 32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39
 .BYTE 40,40,40,40,41,41,41,41,42,42,42,42
 
SCR_OR
.REPT	32
 .BYTE $C0,$30,$0C,$03
.ENDR
SCR_AND
.REPT	32
 .BYTE $3F,$CF,$F3,$FC
.ENDR
SPR08_DRW_CNT
.REPT	32
 .BYTE 1*8, 2*8, 2*8, 2*8
.ENDR
SPR08_CLR_CNT
.REPT	32
 .BYTE 1, 2, 2, 2
.ENDR

SPR00_AND_LO .BYTE <(SPR00_AND_0-8),<(SPR00_AND_1-8),<(SPR00_AND_2-8),<(SPR00_AND_3-8)
SPR00_AND_HI .BYTE >(SPR00_AND_0-8),>(SPR00_AND_1-8),>(SPR00_AND_2-8),>(SPR00_AND_3-8)
SPR00_ORA_LO .BYTE <(SPR00_ORA_0-8),<(SPR00_ORA_1-8),<(SPR00_ORA_2-8),<(SPR00_ORA_3-8)
SPR00_ORA_HI .BYTE >(SPR00_ORA_0-8),>(SPR00_ORA_1-8),>(SPR00_ORA_2-8),>(SPR00_ORA_3-8)

SPRITE_AND_LO_LO .BYTE <SPR00_AND_LO
SPRITE_AND_LO_HI .BYTE >SPR00_AND_LO
SPRITE_AND_HI_LO .BYTE <SPR00_AND_HI
SPRITE_AND_HI_HI .BYTE >SPR00_AND_HI
SPRITE_ORA_LO_LO .BYTE <SPR00_ORA_LO
SPRITE_ORA_LO_HI .BYTE >SPR00_ORA_LO
SPRITE_ORA_HI_LO .BYTE <SPR00_ORA_HI
SPRITE_ORA_HI_HI .BYTE >SPR00_ORA_HI
SPRITE_TYPE      .BYTE 0,1,2,3

	.ALIGN 8
SPR00_ORA_0
;.BYTE %00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000 ; remove?
.BYTE %00010100,%01111101,%01101001,%01000001,%01000001,%01101001,%01111101,%00010100

SPR00_ORA_1
.BYTE %00000000,%01000000,%01000000,%01000000,%01000000,%01000000,%01000000,%00000000
.BYTE %00000101,%00011111,%00011010,%00010000,%00010000,%00011010,%00011111,%00000101

SPR00_ORA_2
.BYTE %01000000,%11010000,%10010000,%00010000,%00010000,%10010000,%11010000,%01000000
.BYTE %00000001,%00000111,%00000110,%00000100,%00000100,%00000110,%00000111,%00000001

SPR00_ORA_3
.BYTE %01010000,%11110100,%10100100,%00000100,%00000100,%10100100,%11110100,%01010000
.BYTE %00000000,%00000001,%00000001,%00000001,%00000001,%00000001,%00000001,%00000000

SPR00_AND_0
;.BYTE %11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111 ; remove?
.BYTE %11000011,%00000000,%00000000,%00111100,%00111100,%00000000,%00000000,%11000011

SPR00_AND_1
.BYTE %11111111,%00111111,%00111111,%00111111,%00111111,%00111111,%00111111,%11111111
.BYTE %11110000,%11000000,%11000000,%11001111,%11001111,%11000000,%11000000,%11110000

SPR00_AND_2
.BYTE %00111111,%00001111,%00001111,%11001111,%11001111,%00001111,%00001111,%00111111
.BYTE %11111100,%11110000,%11110000,%11110011,%11110011,%11110000,%11110000,%11111100

SPR00_AND_3
.BYTE %00001111,%00000011,%00000011,%11110011,%11110011,%00000011,%00000011,%00001111
.BYTE %11111111,%11111100,%11111100,%11111100,%11111100,%11111100,%11111100,%11111111

	.ALIGN $100
SPRITE_DRW_JMP_LIST	.WORD DRAW_08
SCR0_OBJ_V	.BYTE 	0,184,0,184,13,16,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,117,114,111,108,105
SCR0_OBJ_H	.BYTE 	0,0,120,120,13,16,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,117,114,111,108,105
SCR0_OBJ_T	.BYTE	0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0
SCR1_OBJ_V	.BYTE 	0,184,0,184,13,16,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,117,114,111,108,105
SCR1_OBJ_H	.BYTE 	0,0,120,120,13,16,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110,115,120,117,114,111,108,105
SCR1_OBJ_T	.BYTE	0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0 ; word aligned so must be *2

	.ALIGN $100
SPRITE_CLR_JMP_LIST	.WORD CLEAR_08

	.ALIGN $100
MAP_LFT:
.REPT 5
	.BYTE SCN_ZP_01, SCN_ZP_03, SCN_ZP_05, SCN_ZP_07, SCN_ZP_09, SCN_ZP_11, SCN_ZP_13, SCN_ZP_15, SCN_ZP_17, SCN_ZP_19, SCN_ZP_21, SCN_ZP_23, SCN_ZP_25, SCN_ZP_27, SCN_ZP_29, SCN_ZP_27
	.BYTE SCN_ZP_29, SCN_ZP_27, SCN_ZP_25, SCN_ZP_23, SCN_ZP_21, SCN_ZP_19, SCN_ZP_17, SCN_ZP_15, SCN_ZP_13, SCN_ZP_11, SCN_ZP_09, SCN_ZP_07, SCN_ZP_05, SCN_ZP_03, SCN_ZP_01, SCN_ZP_03
	.BYTE SCN_ZP_05, SCN_ZP_07, SCN_ZP_05, SCN_ZP_07, SCN_ZP_09, SCN_ZP_11, SCN_ZP_13, SCN_ZP_15, SCN_ZP_17, SCN_ZP_19, SCN_ZP_21, SCN_ZP_23, SCN_ZP_25, SCN_ZP_27, SCN_ZP_29, SCN_ZP_27
	.BYTE SCN_ZP_29, SCN_ZP_31, SCN_ZP_29, SCN_ZP_27, SCN_ZP_25, SCN_ZP_23, SCN_ZP_17, SCN_ZP_15, SCN_ZP_13, SCN_ZP_11, SCN_ZP_09, SCN_ZP_07, SCN_ZP_05, SCN_ZP_03, SCN_ZP_01, SCN_ZP_03
.ENDR

	.ALIGN $100
MAP_RGT:
.REPT 5
	.BYTE SCN_ZP_02, SCN_ZP_04, SCN_ZP_06, SCN_ZP_08, SCN_ZP_10, SCN_ZP_12, SCN_ZP_14, SCN_ZP_16, SCN_ZP_18, SCN_ZP_20, SCN_ZP_22, SCN_ZP_24, SCN_ZP_26, SCN_ZP_28, SCN_ZP_30, SCN_ZP_32
	.BYTE SCN_ZP_30, SCN_ZP_28, SCN_ZP_26, SCN_ZP_24, SCN_ZP_22, SCN_ZP_20, SCN_ZP_18, SCN_ZP_16, SCN_ZP_14, SCN_ZP_12, SCN_ZP_10, SCN_ZP_08, SCN_ZP_06, SCN_ZP_04, SCN_ZP_02, SCN_ZP_04
	.BYTE SCN_ZP_02, SCN_ZP_04, SCN_ZP_06, SCN_ZP_08, SCN_ZP_10, SCN_ZP_12, SCN_ZP_14, SCN_ZP_16, SCN_ZP_18, SCN_ZP_20, SCN_ZP_22, SCN_ZP_24, SCN_ZP_26, SCN_ZP_28, SCN_ZP_30, SCN_ZP_32
	.BYTE SCN_ZP_30, SCN_ZP_28, SCN_ZP_26, SCN_ZP_24, SCN_ZP_22, SCN_ZP_20, SCN_ZP_18, SCN_ZP_16, SCN_ZP_14, SCN_ZP_12, SCN_ZP_10, SCN_ZP_08, SCN_ZP_06, SCN_ZP_04, SCN_ZP_02, SCN_ZP_04
.ENDR

.MACRO	DLI_LINE DLI_ADDR, SCREEN_MODE
    .BYTE SCREEN_ADR+:2,<(:1+2),>(:1+2)
.ENDM 
	
	.ALIGN $400
DISPLAY_LIST		
	.BYTE BLANK_LINE,BLANK_LINE,BLANK_LINE	; Discard 24 scan lines
;DLI_SCN_T_ADDR
	DLI_LINE WHT_LINE_ADR-2 SM
	DLI_LINE BLK_LINE_ADR-2 SM
	DLI_LINE TXT_SCR_ADR-2 SM_HR
.REPT	5-1
	.BYTE SM_HR
.ENDR
	DLI_LINE BLK_LINE_ADR-2 SM
	DLI_LINE WHT_LINE_ADR-2 SM

	DLI_LINE MAP_SCR_ADR-2 SM
.REPT	20-1
	.BYTE SM
.ENDR
	DLI_LINE WHT_LINE_ADR-2 SM

	.BYTE DLI_INT+SM
	
	DLI_LINE SCN0_LINE000 SM
	DLI_LINE SCN0_LINE001 SM
	DLI_LINE SCN0_LINE002 SM
	DLI_LINE SCN0_LINE003 SM
	DLI_LINE SCN0_LINE004 SM
	DLI_LINE SCN0_LINE005 SM
	DLI_LINE SCN0_LINE006 SM
	DLI_LINE SCN0_LINE007 SM
	DLI_LINE SCN0_LINE008 SM
	DLI_LINE SCN0_LINE009 SM

	DLI_LINE SCN0_LINE010 SM
	DLI_LINE SCN0_LINE011 SM
	DLI_LINE SCN0_LINE012 SM
	DLI_LINE SCN0_LINE013 SM
	DLI_LINE SCN0_LINE014 SM
	DLI_LINE SCN0_LINE015 SM
	DLI_LINE SCN0_LINE016 SM
	DLI_LINE SCN0_LINE017 SM
	DLI_LINE SCN0_LINE018 SM
	DLI_LINE SCN0_LINE019 SM

	DLI_LINE SCN0_LINE020 SM
	DLI_LINE SCN0_LINE021 SM
	DLI_LINE SCN0_LINE022 SM
	DLI_LINE SCN0_LINE023 SM
	DLI_LINE SCN0_LINE024 SM
	DLI_LINE SCN0_LINE025 SM
	DLI_LINE SCN0_LINE026 SM
	DLI_LINE SCN0_LINE027 SM
	DLI_LINE SCN0_LINE028 SM
	DLI_LINE SCN0_LINE029 SM

	DLI_LINE SCN0_LINE030 SM
	DLI_LINE SCN0_LINE031 SM
	DLI_LINE SCN0_LINE032 SM
	DLI_LINE SCN0_LINE033 SM
	DLI_LINE SCN0_LINE034 SM
	DLI_LINE SCN0_LINE035 SM
	DLI_LINE SCN0_LINE036 SM
	DLI_LINE SCN0_LINE037 SM
	DLI_LINE SCN0_LINE038 SM
	DLI_LINE SCN0_LINE039 SM

	DLI_LINE SCN0_LINE040 SM
	DLI_LINE SCN0_LINE041 SM
	DLI_LINE SCN0_LINE042 SM
	DLI_LINE SCN0_LINE043 SM
	DLI_LINE SCN0_LINE044 SM
	DLI_LINE SCN0_LINE045 SM
	DLI_LINE SCN0_LINE046 SM
	DLI_LINE SCN0_LINE047 SM
	DLI_LINE SCN0_LINE048 SM
	DLI_LINE SCN0_LINE049 SM

	DLI_LINE SCN0_LINE050 SM
	DLI_LINE SCN0_LINE051 SM
	DLI_LINE SCN0_LINE052 SM
	DLI_LINE SCN0_LINE053 SM
	DLI_LINE SCN0_LINE054 SM
	DLI_LINE SCN0_LINE055 SM
	DLI_LINE SCN0_LINE056 SM
	DLI_LINE SCN0_LINE057 SM
	DLI_LINE SCN0_LINE058 SM
	DLI_LINE SCN0_LINE059 SM

	DLI_LINE SCN0_LINE060 SM
	DLI_LINE SCN0_LINE061 SM
	DLI_LINE SCN0_LINE062 SM
	DLI_LINE SCN0_LINE063 SM
	DLI_LINE SCN0_LINE064 SM
	DLI_LINE SCN0_LINE065 SM
	DLI_LINE SCN0_LINE066 SM
	DLI_LINE SCN0_LINE067 SM
	DLI_LINE SCN0_LINE068 SM
	DLI_LINE SCN0_LINE069 SM

	DLI_LINE SCN0_LINE070 SM
	DLI_LINE SCN0_LINE071 SM
	DLI_LINE SCN0_LINE072 SM
	DLI_LINE SCN0_LINE073 SM
	DLI_LINE SCN0_LINE074 SM
	DLI_LINE SCN0_LINE075 SM
	DLI_LINE SCN0_LINE076 SM
	DLI_LINE SCN0_LINE077 SM
	DLI_LINE SCN0_LINE078 SM
	DLI_LINE SCN0_LINE079 SM

	DLI_LINE SCN0_LINE080 SM
	DLI_LINE SCN0_LINE081 SM
	DLI_LINE SCN0_LINE082 SM
	DLI_LINE SCN0_LINE083 SM
	DLI_LINE SCN0_LINE084 SM
	DLI_LINE SCN0_LINE085 SM
	DLI_LINE SCN0_LINE086 SM
	DLI_LINE SCN0_LINE087 SM
	DLI_LINE SCN0_LINE088 SM
	DLI_LINE SCN0_LINE089 SM

	DLI_LINE SCN0_LINE090 SM
	DLI_LINE SCN0_LINE091 SM
	DLI_LINE SCN0_LINE092 SM
	DLI_LINE SCN0_LINE093 SM
	DLI_LINE SCN0_LINE094 SM
	DLI_LINE SCN0_LINE095 SM
	DLI_LINE SCN0_LINE096 SM
	DLI_LINE SCN0_LINE097 SM
	DLI_LINE SCN0_LINE098 SM
	DLI_LINE SCN0_LINE099 SM

	DLI_LINE SCN0_LINE100 SM
	DLI_LINE SCN0_LINE101 SM
	DLI_LINE SCN0_LINE102 SM
	DLI_LINE SCN0_LINE103 SM
	DLI_LINE SCN0_LINE104 SM
	DLI_LINE SCN0_LINE105 SM
	DLI_LINE SCN0_LINE106 SM
	DLI_LINE SCN0_LINE107 SM
	DLI_LINE SCN0_LINE108 SM
	DLI_LINE SCN0_LINE109 SM
	
	DLI_LINE SCN0_LINE110 SM
	DLI_LINE SCN0_LINE111 SM
	DLI_LINE SCN0_LINE112 SM
	DLI_LINE SCN0_LINE113 SM
	DLI_LINE SCN0_LINE114 SM
	DLI_LINE SCN0_LINE115 SM
	DLI_LINE SCN0_LINE116 SM
	DLI_LINE SCN0_LINE117 SM
	DLI_LINE SCN0_LINE118 SM
	DLI_LINE SCN0_LINE119 SM

	DLI_LINE SCN0_LINE120 SM
	DLI_LINE SCN0_LINE121 SM
	DLI_LINE SCN0_LINE122 SM
	DLI_LINE SCN0_LINE123 SM
	DLI_LINE SCN0_LINE124 SM
	DLI_LINE SCN0_LINE125 SM
	DLI_LINE SCN0_LINE126 SM
	DLI_LINE SCN0_LINE127 SM
	DLI_LINE SCN0_LINE128 SM
	DLI_LINE SCN0_LINE129 SM

	DLI_LINE SCN0_LINE130 SM
	DLI_LINE SCN0_LINE131 SM
	DLI_LINE SCN0_LINE132 SM
	DLI_LINE SCN0_LINE133 SM
	DLI_LINE SCN0_LINE134 SM
	DLI_LINE SCN0_LINE135 SM
	DLI_LINE SCN0_LINE136 SM
	DLI_LINE SCN0_LINE137 SM
	DLI_LINE SCN0_LINE138 SM
	DLI_LINE SCN0_LINE139 SM

	DLI_LINE SCN0_LINE140 SM
	DLI_LINE SCN0_LINE141 SM
	DLI_LINE SCN0_LINE142 SM
	DLI_LINE SCN0_LINE143 SM
	DLI_LINE SCN0_LINE144 SM
	DLI_LINE SCN0_LINE145 SM
	DLI_LINE SCN0_LINE146 SM
	DLI_LINE SCN0_LINE147 SM
	DLI_LINE SCN0_LINE148 SM
	DLI_LINE SCN0_LINE149 SM

	DLI_LINE SCN0_LINE150 SM
	DLI_LINE SCN0_LINE151 SM
	DLI_LINE SCN0_LINE152 SM
	DLI_LINE SCN0_LINE153 SM
	DLI_LINE SCN0_LINE154 SM
	DLI_LINE SCN0_LINE155 SM
	DLI_LINE SCN0_LINE156 SM
	DLI_LINE SCN0_LINE157 SM
	DLI_LINE SCN0_LINE158 SM
	DLI_LINE SCN0_LINE159 SM

;	.BYTE DLI_INT+SM
	DLI_LINE WHT_LINE_ADR-2 SM
	.BYTE DISP_LIST,<DISPLAY_LIST,>DISPLAY_LIST

.ALIGN $1000
SCN0_T ; screen	

SCN0_LINE000 = SCN0_T 					;+(42*000)
SCN0_LINE001 = SCN0_LINE000 +(42)
SCN0_LINE002 = SCN0_LINE001 +(42)
SCN0_LINE003 = SCN0_LINE002 +(42)
SCN0_LINE004 = SCN0_LINE003 +(42)
SCN0_LINE005 = SCN0_LINE004 +(42)

SCN0_LINE006 = SCN0_LINE000 +256
SCN0_LINE007 = SCN0_LINE006 +(42)
SCN0_LINE008 = SCN0_LINE007 +(42)
SCN0_LINE009 = SCN0_LINE008 +(42)
SCN0_LINE010 = SCN0_LINE009 +(42)
SCN0_LINE011 = SCN0_LINE010 +(42)

SCN0_LINE012 = SCN0_LINE006 +256
SCN0_LINE013 = SCN0_LINE012 +(42*001)
SCN0_LINE014 = SCN0_LINE012 +(42*002)
SCN0_LINE015 = SCN0_LINE012 +(42*003)
SCN0_LINE016 = SCN0_LINE012 +(42*004)
SCN0_LINE017 = SCN0_LINE012 +(42*005)

SCN0_LINE018 = SCN0_LINE012 +256
SCN0_LINE019 = SCN0_LINE018 +(42*001)
SCN0_LINE020 = SCN0_LINE018 +(42*002)
SCN0_LINE021 = SCN0_LINE018 +(42*003)
SCN0_LINE022 = SCN0_LINE018 +(42*004)
SCN0_LINE023 = SCN0_LINE018 +(42*005)

SCN0_LINE024 = SCN0_LINE018 +256
SCN0_LINE025 = SCN0_LINE024 +(42*001)
SCN0_LINE026 = SCN0_LINE024 +(42*002)
SCN0_LINE027 = SCN0_LINE024 +(42*003)
SCN0_LINE028 = SCN0_LINE024 +(42*004)
SCN0_LINE029 = SCN0_LINE024 +(42*005)

SCN0_LINE030 = SCN0_LINE024 +256
SCN0_LINE031 = SCN0_LINE030 +(42*001)
SCN0_LINE032 = SCN0_LINE030 +(42*002)
SCN0_LINE033 = SCN0_LINE030 +(42*003)
SCN0_LINE034 = SCN0_LINE030 +(42*004)
SCN0_LINE035 = SCN0_LINE030 +(42*005)

SCN0_LINE036 = SCN0_LINE030 +256
SCN0_LINE037 = SCN0_LINE036 +(42*001)
SCN0_LINE038 = SCN0_LINE036 +(42*002)
SCN0_LINE039 = SCN0_LINE036 +(42*003)
SCN0_LINE040 = SCN0_LINE036 +(42*004)
SCN0_LINE041 = SCN0_LINE036 +(42*005)

SCN0_LINE042 = SCN0_LINE036 +256
SCN0_LINE043 = SCN0_LINE042 +(42*001)
SCN0_LINE044 = SCN0_LINE042 +(42*002)
SCN0_LINE045 = SCN0_LINE042 +(42*003)
SCN0_LINE046 = SCN0_LINE042 +(42*004)
SCN0_LINE047 = SCN0_LINE042 +(42*005)

SCN0_LINE048 = SCN0_LINE042 +256
SCN0_LINE049 = SCN0_LINE048 +(42*001)
SCN0_LINE050 = SCN0_LINE048 +(42*002)
SCN0_LINE051 = SCN0_LINE048 +(42*003)
SCN0_LINE052 = SCN0_LINE048 +(42*004)
SCN0_LINE053 = SCN0_LINE048 +(42*005)

SCN0_LINE054 = SCN0_LINE048 +256
SCN0_LINE055 = SCN0_LINE054 +(42*001)
SCN0_LINE056 = SCN0_LINE054 +(42*002)
SCN0_LINE057 = SCN0_LINE054 +(42*003)
SCN0_LINE058 = SCN0_LINE054 +(42*004)
SCN0_LINE059 = SCN0_LINE054 +(42*005)

SCN0_LINE060 = SCN0_LINE054 +256
SCN0_LINE061 = SCN0_LINE060 +(42*001)
SCN0_LINE062 = SCN0_LINE060 +(42*002)
SCN0_LINE063 = SCN0_LINE060 +(42*003)
SCN0_LINE064 = SCN0_LINE060 +(42*004)
SCN0_LINE065 = SCN0_LINE060 +(42*005)

SCN0_LINE066 = SCN0_LINE060 +256
SCN0_LINE067 = SCN0_LINE066 +(42*001)
SCN0_LINE068 = SCN0_LINE066 +(42*002)
SCN0_LINE069 = SCN0_LINE066 +(42*003)
SCN0_LINE070 = SCN0_LINE066 +(42*004)
SCN0_LINE071 = SCN0_LINE066 +(42*005)

SCN0_LINE072 = SCN0_LINE066 +256
SCN0_LINE073 = SCN0_LINE072 +(42*001)
SCN0_LINE074 = SCN0_LINE072 +(42*002)
SCN0_LINE075 = SCN0_LINE072 +(42*003)
SCN0_LINE076 = SCN0_LINE072 +(42*004)
SCN0_LINE077 = SCN0_LINE072 +(42*005)

SCN0_LINE078 = SCN0_LINE072 +256
SCN0_LINE079 = SCN0_LINE078 +(42*001)
SCN0_LINE080 = SCN0_LINE078 +(42*002)
SCN0_LINE081 = SCN0_LINE078 +(42*003) 
SCN0_LINE082 = SCN0_LINE078 +(42*004)
SCN0_LINE083 = SCN0_LINE078 +(42*005)

SCN0_LINE084 = SCN0_LINE078 +256
SCN0_LINE085 = SCN0_LINE084 +(42*001)
SCN0_LINE086 = SCN0_LINE084 +(42*002)
SCN0_LINE087 = SCN0_LINE084 +(42*003)
SCN0_LINE088 = SCN0_LINE084 +(42*004)
SCN0_LINE089 = SCN0_LINE084 +(42*005)

SCN0_LINE090 = SCN0_LINE084 +256
SCN0_LINE091 = SCN0_LINE090 +(42*001)
SCN0_LINE092 = SCN0_LINE090 +(42*002)
SCN0_LINE093 = SCN0_LINE090 +(42*003)
SCN0_LINE094 = SCN0_LINE090 +(42*004)
SCN0_LINE095 = SCN0_LINE090 +(42*005)

SCN0_LINE096 = SCN0_LINE090 +256
SCN0_LINE097 = SCN0_LINE096 +(42*001)
SCN0_LINE098 = SCN0_LINE096 +(42*002)
SCN0_LINE099 = SCN0_LINE096 +(42*003)
SCN0_LINE100 = SCN0_LINE096 +(42*004)
SCN0_LINE101 = SCN0_LINE096 +(42*005)

SCN0_LINE102 = SCN0_LINE096 +256
SCN0_LINE103 = SCN0_LINE102 +(42*001)
SCN0_LINE104 = SCN0_LINE102 +(42*002)
SCN0_LINE105 = SCN0_LINE102 +(42*003)
SCN0_LINE106 = SCN0_LINE102 +(42*004)
SCN0_LINE107 = SCN0_LINE102 +(42*005)

SCN0_LINE108 = SCN0_LINE102 +256
SCN0_LINE109 = SCN0_LINE108 +(42*001)
SCN0_LINE110 = SCN0_LINE108 +(42*002)
SCN0_LINE111 = SCN0_LINE108 +(42*003)
SCN0_LINE112 = SCN0_LINE108 +(42*004)
SCN0_LINE113 = SCN0_LINE108 +(42*005)

SCN0_LINE114 = SCN0_LINE108 +256
SCN0_LINE115 = SCN0_LINE114 +(42*001)
SCN0_LINE116 = SCN0_LINE114 +(42*002)
SCN0_LINE117 = SCN0_LINE114 +(42*003)
SCN0_LINE118 = SCN0_LINE114 +(42*004)
SCN0_LINE119 = SCN0_LINE114 +(42*005)

SCN0_LINE120 = SCN0_LINE114 +256
SCN0_LINE121 = SCN0_LINE120 +(42*001)
SCN0_LINE122 = SCN0_LINE120 +(42*002)
SCN0_LINE123 = SCN0_LINE120 +(42*003)
SCN0_LINE124 = SCN0_LINE120 +(42*004)
SCN0_LINE125 = SCN0_LINE120 +(42*005)

SCN0_LINE126 = SCN0_LINE120 +256
SCN0_LINE127 = SCN0_LINE126 +(42*001)
SCN0_LINE128 = SCN0_LINE126 +(42*002)
SCN0_LINE129 = SCN0_LINE126 +(42*003)
SCN0_LINE130 = SCN0_LINE126 +(42*004)
SCN0_LINE131 = SCN0_LINE126 +(42*005)

SCN0_LINE132 = SCN0_LINE126 +256
SCN0_LINE133 = SCN0_LINE132 +(42*001)
SCN0_LINE134 = SCN0_LINE132 +(42*002)
SCN0_LINE135 = SCN0_LINE132 +(42*003)
SCN0_LINE136 = SCN0_LINE132 +(42*004)
SCN0_LINE137 = SCN0_LINE132 +(42*005)

SCN0_LINE138 = SCN0_LINE132 +256
SCN0_LINE139 = SCN0_LINE138 +(42*001)
SCN0_LINE140 = SCN0_LINE138 +(42*002)
SCN0_LINE141 = SCN0_LINE138 +(42*003)
SCN0_LINE142 = SCN0_LINE138 +(42*004)
SCN0_LINE143 = SCN0_LINE138 +(42*005)

SCN0_LINE144 = SCN0_LINE138 +256
SCN0_LINE145 = SCN0_LINE144 +(42*001)
SCN0_LINE146 = SCN0_LINE144 +(42*002)
SCN0_LINE147 = SCN0_LINE144 +(42*003)
SCN0_LINE148 = SCN0_LINE144 +(42*004)
SCN0_LINE149 = SCN0_LINE144 +(42*005)

SCN0_LINE150 = SCN0_LINE144 +256
SCN0_LINE151 = SCN0_LINE150 +(42*001)
SCN0_LINE152 = SCN0_LINE150 +(42*002)
SCN0_LINE153 = SCN0_LINE150 +(42*003)
SCN0_LINE154 = SCN0_LINE150 +(42*004)
SCN0_LINE155 = SCN0_LINE150 +(42*005)

SCN0_LINE156 = SCN0_LINE150 +256
SCN0_LINE157 = SCN0_LINE156 +(42*001)
SCN0_LINE158 = SCN0_LINE156 +(42*002)
SCN0_LINE159 = SCN0_LINE156 +(42*003)

WHT_LINE_ADR = SCN0_LINE156 +(42*004)
GRY_LINE_ADR = SCN0_LINE156 +(42*005)

TXT_SCR_ADR = SCN0_LINE156 +256
BLK_LINE_ADR = TXT_SCR_ADR +(5*40)

MAP_SCR_ADR = TXT_SCR_ADR +256

; 0-6
; 1-7
; 2-8
; 3-9
; 4-10
; 5-11

; spr_tab jmp_tab,v ; list of lo address to jump to - to setup zp scn addr
; get vtab,v
; get vtab+5,v


		
;  sta scr0_hi
;  sta scr1_hi
;  sta scr2_hi
;  sta scr3_hi
;  sta scr4_hi
;  sta scr5_hi
;  lda #(40*0) sta scr0_lo
;  lda #(40*1) sta scr1_lo
;  lda #(40*2) sta scr2_lo
;  lda #(40*3) sta scr3_lo
;  lda #(40*4) sta scr4_lo
;  lda #(40*5) sta scr5_lo

; drw_spr_zp_01_07
;  lda scr,y
;  sta scr0_hi
;  sta scr1_hi
;  sta scr2_hi
;  sta scr3_hi
;  sta scr4_hi
;  lda str+5,y
;  sta scr5_hi
;  lda #(40*1) sta scr1_lo
;  lda #(40*2) sta scr2_lo
;  lda #(40*3) sta scr3_lo
;  lda #(40*4) sta scr4_lo
;  lda #(40*5) sta scr5_lo
;  lda #(40*0) sta scr0_lo

; lda scr
; spr_zp_02_08
; spr_zp_03_09
; spr_zp_04_10
; spr_zp_05_11
